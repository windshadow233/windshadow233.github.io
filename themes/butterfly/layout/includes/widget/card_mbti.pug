style.
    :root{
      --mbti-blue: #4298b4;
      --mbti-orange: #e4ae3a;
      --mbti-green: #33a474;
      --mbti-purple: #88619a;
      --mbti-red: #f25e62;
    }
    .mbti {
      width: 100%;
      padding: 5px;
    }
    .bar-group {
      margin-bottom: 0px;
    }
    .bar-labels {
      display: flex;
      justify-content: space-between;
      font-size: 12px;
      margin-top: 0px;
    }
    .bar-label {
      width: fit-content;
      position: relative;
      transform: translateX(-50%);
      margin-bottom: 0px;
      font-size: 12px;
    }
    .bar-container {
      position: relative;
      height: 10px;
      background-color: #eee;
      border-radius: 10px;
    }
    .bar-fill {
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      border-radius: 10px;
      width: 100%;
    }
    .bar-marker {
      position: absolute;
      z-index: 1;
      width: 12px;
      height: 12px;
      border-radius: 100%;
      box-shadow: 0 4px 10px rgba(29, 36, 50, .15);
      border: 3px solid white;
      top: 50%;
      transform: translateY(-50%) translateX(-50%);
    }
    .mbti-date {
      font-size: 12px;
      float: right;
    }
    .color-blue {color: var(--mbti-blue);}
    .color-orange {color: var(--mbti-orange);}
    .color-green {color: var(--mbti-green);}
    .color-purple {color: var(--mbti-purple);}
    .color-red {color: var(--mbti-red);}

    .blue   { background-color: var(--mbti-blue); }
    .orange { background-color: var(--mbti-orange); }
    .green  { background-color: var(--mbti-green); }
    .purple { background-color: var(--mbti-purple); }
    .red    { background-color: var(--mbti-red); }

    .mbti .image {
        position: absolute;
        right: 0px;
        top: 10px;
        width: 75px;
        transition: transform 2s cubic-bezier(.13, .45, .21, 1.02);
        opacity: 0.8;
    }
    .mbti .image img {
        display: block;
        max-width: 100%;
        transition: filter 375ms ease-in .2s
    }
    .mbti:hover .image {
        transform: rotate(-10deg);
    }
- const mbtiImages = {}
- mbtiImages.INTJ = 'https://blogfiles.oss.fyz666.xyz/svg/e54d2a84-55fd-414d-81af-7493ff2e11c1.svg'
- mbtiImages.INTP = 'https://blogfiles.oss.fyz666.xyz/svg/a10c4445-b614-4d11-b45e-cfda23dbd485.svg'
- mbtiImages.ENTJ = 'https://blogfiles.oss.fyz666.xyz/svg/c29d423d-b3ea-49a8-a78b-1f2c74133ba9.svg'
- mbtiImages.ENTP = 'https://blogfiles.oss.fyz666.xyz/svg/c80b91f1-2305-46b7-bb13-1dca4b168983.svg'
- mbtiImages.INFJ = 'https://blogfiles.oss.fyz666.xyz/svg/3a894383-b796-46f3-9320-6f39360d9a66.svg'
- mbtiImages.INFP = 'https://blogfiles.oss.fyz666.xyz/svg/39e1659f-5eef-4709-bc5f-c5e588168293.svg'
- mbtiImages.ENFJ = 'https://blogfiles.oss.fyz666.xyz/svg/40031020-9ea7-43e0-b2ac-fd0348181a66.svg'
- mbtiImages.ENFP = 'https://blogfiles.oss.fyz666.xyz/svg/9e11c236-d35d-4118-b1f9-2ee9427b8dcb.svg'
- mbtiImages.ISTJ = 'https://blogfiles.oss.fyz666.xyz/svg/1222b517-92dd-48dc-a4e7-b762bafb5419.svg'
- mbtiImages.ISFJ = 'https://blogfiles.oss.fyz666.xyz/svg/4b4833f4-b189-419a-978b-a1e2ab594e4c.svg'
- mbtiImages.ESFJ = 'https://blogfiles.oss.fyz666.xyz/svg/d2ea3f35-23f3-4475-b238-78deea37a8f3.svg'
- mbtiImages.ESFP = 'https://blogfiles.oss.fyz666.xyz/svg/dd593ab0-1531-4816-9eff-1658f51ba35f.svg'
- mbtiImages.ESTJ = 'https://blogfiles.oss.fyz666.xyz/svg/3ef072a8-b238-4c83-80af-33f33b85bc47.svg'
- mbtiImages.ESTP = 'https://blogfiles.oss.fyz666.xyz/svg/643f62d0-777c-427b-b504-8796d02bb241.svg'
- mbtiImages.ISFP = 'https://blogfiles.oss.fyz666.xyz/svg/688412b9-d42d-4a17-bf3a-64dfd4eb76fa.svg'
- mbtiImages.ISTP = 'https://blogfiles.oss.fyz666.xyz/svg/ff7c5a0c-a453-45b1-a18a-aefa0253b555.svg'

- const mbtiMap = {E: '外倾', I: '内倾', S: '现实', N: '直觉', T: '理性', F: '感性', J: '有计划', P: '灵活'}
- const atMap = {A: '坚决', T: '动荡'}
- const flipType = ['E', 'N', 'T', 'J']
- const flipMap = {ei: { E: 'I', I: 'E' }, sn: { S: 'N', N: 'S' }, tf: { T: 'F', F: 'T' }, jp: { J: 'P', P: 'J' }, at: { A: 'T', T: 'A' }}
- const mbtiKeys = ['ei', 'sn', 'tf', 'jp']
- const colors = ['blue', 'orange', 'green', 'purple', 'red']
- const card_mbti = theme.aside.card_mbti

each key in mbtiKeys
  - let val = card_mbti[key].value
  - let type = card_mbti[key].type
  if (val < 50)
    - card_mbti[key].type = flipMap[key][type]
    - card_mbti[key].value = 100 - val
- const mbtiValues = mbtiKeys.map(k => flipType.includes(card_mbti[k].type) ? 100 - card_mbti[k].value : card_mbti[k].value)
- const percentValues = mbtiValues.concat(card_mbti.at.type === 'A' ? 100 - card_mbti.at.value : card_mbti.at.value)
- let mbti_text = mbtiKeys.map(k => card_mbti[k].type).join('')
- const image = mbtiImages[mbti_text]
- mbti_text = mbti_text + '-' + card_mbti.at.type


.card-widget.card-mbti
  .item-headline
    i.iconfont.icon-MBTI
    span= `MBTI（${mbti_text}）`

  .mbti
    each val, i in ['ei', 'sn', 'tf', 'jp', 'at']
      - const value = card_mbti[val].value
      - const type = card_mbti[val].type
      - const percent = percentValues[i]
      - const color = colors[i]
      - const labelMap = val === 'at' ? atMap : mbtiMap
      - const label1 = val === 'ei' ? '外倾' : val === 'sn' ? '直觉' : val === 'tf' ? '理性' : val === 'jp' ? '有计划' : '坚决'
      - const label2 = val === 'ei' ? '内倾' : val === 'sn' ? '现实' : val === 'tf' ? '感性' : val === 'jp' ? '灵活' : '动荡'

      .bar-group
        .bar-label(class=`color-${color}` style=`left: ${percent}%`) #{value}% #{labelMap[type]}
        .bar-container
          .bar-fill(class=color)
          .bar-marker(class=color style=`left: ${percent}%`)
        .bar-labels
          span= label1
          span= label2
    .image
      img(src=image alt=mbti_text)
    .mbti-date= `更新于：${card_mbti.date}`

