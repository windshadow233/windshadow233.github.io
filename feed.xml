<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>逸风亭</title>
    <link>https://blog.fyz666.xyz/</link>
    
    <image>
      <url>https://blog.fyz666.xyz/images/avatar.jpg</url>
      <title>逸风亭</title>
      <link>https://blog.fyz666.xyz/</link>
    </image>
    
    <atom:link href="https://blog.fyz666.xyz/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description>行所欲行，无问西东。</description>
    <pubDate>Thu, 10 Oct 2024 08:38:12 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>为Butterfly主题新增网站快捷键功能</title>
      <link>https://blog.fyz666.xyz/blog/11765/</link>
      <guid>https://blog.fyz666.xyz/blog/11765/</guid>
      <pubDate>Fri, 31 May 2024 17:05:37 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;最近闲的无聊，于是给博客加了个快捷键功能，可通过长按&lt;kbd&gt;Shift&lt;/kbd&gt;查看效果。本文就来记录一下魔改的过程。其中，面板的样式参考了&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>最近闲的无聊，于是给博客加了个快捷键功能，可通过长按<kbd>Shift</kbd>查看效果。本文就来记录一下魔改的过程。其中，面板的样式参考了<a href="https://blog.anheyu.com/">安知鱼博客</a>，并做了一些小小的修改。</p><hr><p>首先，方便起见，需要引入<code>jQuery</code>，在主题配置文件里加上：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;script type="text/javascript" src="https<span class="token punctuation">:</span>//fastly.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建<code>themes/butterfly/scripts/filters/shortcut_keyboard.js</code>文件，内容如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">'use strict'</span><span class="token keyword">function</span> <span class="token function">injectKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> keyboardHtml <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div id="keyboard-tips" style="display:none;">&lt;div class="keyboardTitle">快捷键&lt;/div>&lt;div class="keybordList"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> hexo<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>config<span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>items<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        keyboardHtml <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="keybordItem">&lt;div class="keyGroup">&lt;div class="key">Shift + </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>&lt;/div>&lt;div class="keyContent">&lt;div class="content"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>item<span class="token punctuation">.</span>action<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div>&lt;/div>&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    keyboardHtml <span class="token operator">+=</span> <span class="token string">'&lt;/div>&lt;/div>&lt;/div>'</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> keyboadrCSS <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;link rel="stylesheet" href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexo<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>config<span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>keyboard_css<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>injector<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'head_end'</span><span class="token punctuation">,</span> keyboardHtml<span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>injector<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'head_end'</span><span class="token punctuation">,</span> keyboadrCSS<span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'after_generate'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>hexo<span class="token punctuation">.</span>theme<span class="token punctuation">.</span>config<span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>enable<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">injectKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改<code>themes/butterfly/layout/includes/head/config.pug</code>，在<code>GLOBAL_CONFIG</code>常量的最后添加一项<code>shortcut</code>：</p><pre class="line-numbers language-pug" data-language="pug"><code class="language-pug"><span class="token tag">script</span><span class="token punctuation">.</span><span class="token multiline-script">  <span class="token keyword">const</span> <span class="token constant">GLOBAL_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token literal-property property">shortcut</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token punctuation">&#123;</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>shortcut<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改<code>themes/butterfly/source/js/main.js</code>，在最后添加一些代码（下面第3至第40行）：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token comment">// 全局快捷键</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">GLOBAL_CONFIG</span><span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>enable<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span>      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> keyboardTimeout<span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">checkFocusNotOnInputOrTextarea</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">const</span> activeElement <span class="token operator">=</span> document<span class="token punctuation">.</span>activeElement          <span class="token keyword">return</span> activeElement<span class="token punctuation">.</span>tagName <span class="token operator">!==</span> <span class="token string">'INPUT'</span> <span class="token operator">&amp;&amp;</span> activeElement<span class="token punctuation">.</span>tagName <span class="token operator">!==</span> <span class="token string">'TEXTAREA'</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> switchCaseString <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        switch(keycode)&#123;            </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token constant">GLOBAL_CONFIG</span><span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">            case </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>keycode<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:              </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>script<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">              break            </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">            default:              break            event.preventDefault()          &#125;</span><span class="token template-punctuation string">`</span></span>        <span class="token keyword">const</span> executeSwitch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">'keycode'</span><span class="token punctuation">,</span> switchCaseString<span class="token punctuation">)</span>        window<span class="token punctuation">.</span><span class="token function-variable function">onfocus</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#keyboard-tips'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          keyboardTimeout <span class="token operator">&amp;&amp;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>keyboardTimeout<span class="token punctuation">)</span>          keyboardTimeout <span class="token operator">=</span> <span class="token keyword">null</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token operator">===</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#keyboard-tips"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>shiftKey <span class="token operator">&amp;&amp;</span> <span class="token function">checkFocusNotOnInputOrTextarea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode <span class="token operator">===</span> <span class="token number">16</span><span class="token punctuation">)</span> keyboardTimeout<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#keyboard-tips"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token constant">GLOBAL_CONFIG</span><span class="token punctuation">.</span>shortcut<span class="token punctuation">.</span>keyboard_delay<span class="token punctuation">)</span>                <span class="token keyword">else</span> <span class="token function">executeSwitch</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span>              <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建<code>source/css/keyboard.css</code>,内容如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">[data-theme=dark]</span> <span class="token punctuation">&#123;</span>    <span class="token property">--maskbgdeep</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span> 0.85<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">--style-border</span><span class="token punctuation">:</span> 1px solid #282829<span class="token punctuation">;</span>    <span class="token property">--shadow-border</span><span class="token punctuation">:</span> 0 8px 16px -4px #00000050<span class="token punctuation">;</span>    <span class="token property">--secondtext</span><span class="token punctuation">:</span> #a1a2b8<span class="token punctuation">;</span>    <span class="token property">--card-bg</span><span class="token punctuation">:</span> #1d1e22<span class="token punctuation">;</span>    <span class="token property">--fontcolor</span><span class="token punctuation">:</span> #F7F7FA<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-theme=light]</span> <span class="token punctuation">&#123;</span>    <span class="token property">--maskbgdeep</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.85<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">--style-border</span><span class="token punctuation">:</span> 1px solid #e3e8f7<span class="token punctuation">;</span>    <span class="token property">--shadow-border</span><span class="token punctuation">:</span> 0 8px 16px -4px #2c2d300c<span class="token punctuation">;</span>    <span class="token property">--secondtext</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>60<span class="token punctuation">,</span>60<span class="token punctuation">,</span>67<span class="token punctuation">,</span>0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">--card-bg</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">--fontcolor</span><span class="token punctuation">:</span> #363636<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips</span> <span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--maskbgdeep<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--style-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -moz-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-moz-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-o-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-webkit-flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">-ms-flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">backdrop-filter</span><span class="token punctuation">:</span> <span class="token function">saturate</span><span class="token punctuation">(</span>180%<span class="token punctuation">)</span> <span class="token function">blur</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-webkit-backdrop-filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--shadow-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--shadow-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-ms-filter</span><span class="token punctuation">:</span> <span class="token string">"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"</span><span class="token punctuation">;</span><span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">alpha</span><span class="token punctuation">(</span>opacity=0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-webkit-transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token property">-moz-transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token property">-o-transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token property">-ms-transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>768px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span><span class="token selector">#keyboard-tips</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips .keyboardTitle</span> <span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--secondtext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips .keybordList</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -moz-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-moz-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-o-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">-webkit-flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">-ms-flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">margin-top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips .keybordItem</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -moz-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">margin-top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips .keyGroup</span> <span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -moz-box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> box<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">-webkit-box-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">-moz-box-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">-o-box-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">-ms-flex-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">-webkit-align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">min-width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#keyboard-tips .keyGroup .key</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> .2em .2em<span class="token punctuation">;</span><span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--card-bg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--fontcolor<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--style-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--secondtext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid <span class="token function">var</span><span class="token punctuation">(</span>--secondtext<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--shadow-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--shadow-border<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> .25rem<span class="token punctuation">;</span><span class="token property">overflow-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span><span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> .875em<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.keyContent</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.keyContent .content</span><span class="token punctuation">&#123;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在主题配置文件<code>_config.butterfly.yml</code>中添加下面内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">shortcut</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">keyboard_delay</span><span class="token punctuation">:</span> <span class="token number">300</span>  <span class="token key atrule">keyboard_css</span><span class="token punctuation">:</span> /css/keyboard.css  <span class="token key atrule">items</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">83</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> S      <span class="token key atrule">action</span><span class="token punctuation">:</span> 站内搜索      <span class="token key atrule">script</span><span class="token punctuation">:</span> $(".search").click()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">82</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> R      <span class="token key atrule">action</span><span class="token punctuation">:</span> 随机文章      <span class="token key atrule">script</span><span class="token punctuation">:</span> toRandomPost()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">38</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> ↑      <span class="token key atrule">action</span><span class="token punctuation">:</span> 回到顶部      <span class="token key atrule">script</span><span class="token punctuation">:</span> btf.scrollToDest()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">40</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> ↓      <span class="token key atrule">action</span><span class="token punctuation">:</span> 前往评论区      <span class="token key atrule">script</span><span class="token punctuation">:</span> location.href='<span class="token comment">#post-comment'</span>    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">37</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> ←      <span class="token key atrule">action</span><span class="token punctuation">:</span> 回退页面      <span class="token key atrule">script</span><span class="token punctuation">:</span> history.back()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">39</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> →      <span class="token key atrule">action</span><span class="token punctuation">:</span> 前进页面      <span class="token key atrule">script</span><span class="token punctuation">:</span> history.forward()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">72</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> H      <span class="token key atrule">action</span><span class="token punctuation">:</span> 返回首页      <span class="token key atrule">script</span><span class="token punctuation">:</span> pjax.loadUrl('/')    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">65</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> A      <span class="token key atrule">action</span><span class="token punctuation">:</span> 关于博主      <span class="token key atrule">script</span><span class="token punctuation">:</span> pjax.loadUrl('/about/')    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">76</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> L      <span class="token key atrule">action</span><span class="token punctuation">:</span> 友情链接      <span class="token key atrule">script</span><span class="token punctuation">:</span> pjax.loadUrl('/link/')    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">68</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> D      <span class="token key atrule">action</span><span class="token punctuation">:</span> 浅色/深色切换      <span class="token key atrule">script</span><span class="token punctuation">:</span> $("<span class="token comment">#darkmode").click()</span>    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">84</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> T      <span class="token key atrule">action</span><span class="token punctuation">:</span> 简体/繁体切换      <span class="token key atrule">script</span><span class="token punctuation">:</span> $("<span class="token comment">#translateLink").click()</span>    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">77</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> M      <span class="token key atrule">action</span><span class="token punctuation">:</span> 播放/暂停音乐      <span class="token key atrule">script</span><span class="token punctuation">:</span> aplayers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.toggle()    <span class="token punctuation">-</span> <span class="token key atrule">keycode</span><span class="token punctuation">:</span> <span class="token number">32</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> Space      <span class="token key atrule">action</span><span class="token punctuation">:</span> 全屏模式切换      <span class="token key atrule">script</span><span class="token punctuation">:</span> fullScreen()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>keyboard_delay</code>表示按下<kbd>Shift</kbd>键后弹出快捷键面板的延迟时间，<code>items</code>为快捷键项，其中：</p><ul><li><code>keycode</code>为JavaScript处理键盘事件时，键盘每一个键的标识值，可通过<a href="https://www.toptal.com/developers/keycode">这个网站</a>测试每个键的keycode值。</li><li><code>text</code>为快捷键面板上对应键的显示文本。</li><li><code>action</code>为快捷键面板上对应快捷键的说明。</li><li><code>script</code>为JavaScript脚本，表示快捷键按下后执行的脚本。</li></ul><p>最后，Hexo一键三连即可！</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/javascript/">JavaScript</category>
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/butterfly%E4%B8%BB%E9%A2%98/">Butterfly主题</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11765/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>魔改Butterfly主题的随机文章封面算法</title>
      <link>https://blog.fyz666.xyz/blog/11701/</link>
      <guid>https://blog.fyz666.xyz/blog/11701/</guid>
      <pubDate>Wed, 22 May 2024 22:21:17 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;Butterfly主题拥有为没有指定封面的文章随机封面的功能，只需在配置文件里定义一个默认封面的列表，主题就会在编译时为没有封面的文章随机指派一张列表中的图片作为其封面。&lt;/p&gt;
&lt;p&gt;不过默认的随机算法是直接调用了JavaScript的&lt;code&gt;Math.random&lt;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>Butterfly主题拥有为没有指定封面的文章随机封面的功能，只需在配置文件里定义一个默认封面的列表，主题就会在编译时为没有封面的文章随机指派一张列表中的图片作为其封面。</p><p>不过默认的随机算法是直接调用了JavaScript的<code>Math.random</code>，同一篇文章在每次部署时随机到的封面都不相同，虽然这也没什么问题，但我希望每篇文章随机到的封面是唯一确定的。这一需求可以通过修改随机算法进行实现。</p><hr><p>Butterfly主题的随机封面功能位于文件<code>themes/butterfly/scripts/filters/random_cover.js</code></p><p>由于JavaScript的<code>Math.random</code>并不支持<code>seed</code>，所以只能另辟蹊径来实现一个随机算法。在Stack Overflow上找到一个实现：</p><a class="tag-Link" target="_blank" href="https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript/47593316#47593316">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript/47593316#47593316.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">Seeding the random number generator in javascript</div>            <div class="tag-link-sitename">Stack Overflow</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>直接拿来主义！修改上面提到的文件：</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">--- a/themes/butterfly/scripts/filters/random_cover.js      2024-05-13 15:20:58</span><span class="token coord">+++ b/themes/butterfly/scripts/filters/random_cover.js      2024-05-23 23:33:30</span><span class="token coord">@@ -5,6 +5,45 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span><span class="token prefix unchanged"> </span><span class="token line">'use strict'</span><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const cyrb128 = (str) => &#123;</span><span class="token prefix inserted">+</span><span class="token line">  let h1 = 1779033703, h2 = 3144134277,</span><span class="token prefix inserted">+</span><span class="token line">      h3 = 1013904242, h4 = 2773480762;</span><span class="token prefix inserted">+</span><span class="token line">  for (let i = 0, k; i &lt; str.length; i++) &#123;</span><span class="token prefix inserted">+</span><span class="token line">      k = str.charCodeAt(i);</span><span class="token prefix inserted">+</span><span class="token line">      h1 = h2 ^ Math.imul(h1 ^ k, 597399067);</span><span class="token prefix inserted">+</span><span class="token line">      h2 = h3 ^ Math.imul(h2 ^ k, 2869860233);</span><span class="token prefix inserted">+</span><span class="token line">      h3 = h4 ^ Math.imul(h3 ^ k, 951274213);</span><span class="token prefix inserted">+</span><span class="token line">      h4 = h1 ^ Math.imul(h4 ^ k, 2716044179);</span><span class="token prefix inserted">+</span><span class="token line">  &#125;</span><span class="token prefix inserted">+</span><span class="token line">  h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067);</span><span class="token prefix inserted">+</span><span class="token line">  h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233);</span><span class="token prefix inserted">+</span><span class="token line">  h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213);</span><span class="token prefix inserted">+</span><span class="token line">  h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179);</span><span class="token prefix inserted">+</span><span class="token line">  h1 ^= (h2 ^ h3 ^ h4), h2 ^= h1, h3 ^= h1, h4 ^= h1;</span><span class="token prefix inserted">+</span><span class="token line">  return [h1>>>0, h2>>>0, h3>>>0, h4>>>0];</span><span class="token prefix inserted">+</span><span class="token line">&#125;</span><span class="token prefix inserted">+</span><span class="token line"></span><span class="token prefix inserted">+</span><span class="token line">const sfc32 = (a, b, c, d) => &#123;</span><span class="token prefix inserted">+</span><span class="token line">  return function() &#123;</span><span class="token prefix inserted">+</span><span class="token line">    a |= 0; b |= 0; c |= 0; d |= 0;</span><span class="token prefix inserted">+</span><span class="token line">    let t = (a + b | 0) + d | 0;</span><span class="token prefix inserted">+</span><span class="token line">    d = d + 1 | 0;</span><span class="token prefix inserted">+</span><span class="token line">    a = b ^ b >>> 9;</span><span class="token prefix inserted">+</span><span class="token line">    b = c + (c &lt;&lt; 3) | 0;</span><span class="token prefix inserted">+</span><span class="token line">    c = (c &lt;&lt; 21 | c >>> 11);</span><span class="token prefix inserted">+</span><span class="token line">    c = c + t | 0;</span><span class="token prefix inserted">+</span><span class="token line">    return (t >>> 0) / 4294967296;</span><span class="token prefix inserted">+</span><span class="token line">  &#125;</span><span class="token prefix inserted">+</span><span class="token line">&#125;</span><span class="token prefix inserted">+</span><span class="token line"></span><span class="token prefix inserted">+</span><span class="token line"> const getRand = (str) => &#123;</span><span class="token prefix inserted">+</span><span class="token line">  // Create cyrb128 state:</span><span class="token prefix inserted">+</span><span class="token line">  var seed = cyrb128(str);</span><span class="token prefix inserted">+</span><span class="token line">  // Four 32-bit component hashes provide the seed for sfc32.</span><span class="token prefix inserted">+</span><span class="token line">  var rand = sfc32(seed[0], seed[1], seed[2], seed[3]);</span><span class="token prefix inserted">+</span><span class="token line">  return rand;</span><span class="token prefix inserted">+</span><span class="token line"> &#125;</span><span class="token prefix inserted">+</span><span class="token line"></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">hexo.extend.filter.register('before_post_render', data => &#123;</span><span class="token prefix unchanged"> </span><span class="token line">  const imgTestReg = /\.(png|jpe?g|gif|svg|webp)(\?.*)?$/i</span><span class="token prefix unchanged"> </span><span class="token line">  let &#123; cover: coverVal, top_img: topImg &#125; = data</span></span><span class="token coord">@@ -16,10 +55,12 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  &#125;</span><span class="token prefix unchanged"> </span><span class="token line"></span><span class="token prefix unchanged"> </span><span class="token line">  const randomCoverFn = () => &#123;</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    // use title to seed random generator</span><span class="token prefix inserted">+</span><span class="token line">    const rand = getRand(data.title)</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    const &#123; cover: &#123; default_cover: defaultCover &#125; &#125; = hexo.theme.config</span><span class="token prefix unchanged"> </span><span class="token line">    if (!defaultCover) return false</span><span class="token prefix unchanged"> </span><span class="token line">    if (!Array.isArray(defaultCover)) return defaultCover</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    const num = Math.floor(Math.random() * defaultCover.length)</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    const num = Math.floor(rand() * defaultCover.length)</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    return defaultCover[num]</span><span class="token prefix unchanged"> </span><span class="token line">  &#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>const rand = getRand(data.title)</code>意为使用文章的标题作为随机函数的种子，然后将原来的<code>Math.random</code>替换为了指定了种子的<code>rand</code>函数，这样即可让每篇文章的随机封面只与标题有关，而又不失伪随机性。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/javascript/">JavaScript</category>
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/butterfly%E4%B8%BB%E9%A2%98/">Butterfly主题</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11701/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo博客文章添加AI摘要</title>
      <link>https://blog.fyz666.xyz/blog/11603/</link>
      <guid>https://blog.fyz666.xyz/blog/11603/</guid>
      <pubDate>Sat, 18 May 2024 04:01:46 GMT</pubDate>
      
      <description>一种零成本的博客文章AI摘要功能实现</description>
      
      
      
      <content:encoded><![CDATA[<p>信息的高速发展让人们学习知识的时间变得更加碎片化，这种情况下，读者通过搜索引擎搜到一篇文章后，未必能有充足的时间去仔细阅读，如果能在文章开头放一个摘要，让读者只需数秒就能判断文章对他是否有价值，就能大大提高读者的浏览效率。</p><hr><h2 id="需求与一些考虑"><a href="#需求与一些考虑" class="headerlink" title="需求与一些考虑"></a>需求与一些考虑</h2><p>但写文章已经够累的了，如果还得一篇一篇地总结、写摘要，则感觉太费时费力。如今大语言模型遍地开花，何不考虑用AI来给文章生成摘要？</p><div class="note primary simple"><p>本文所使用的方法是以静态文件的形式引入摘要，并且零成本，如需要更完善、互动性更强的功能，请考虑付费使用下面这个洪哥开发的插件&amp;服务⬇️</p></div><a class="tag-Link" target="_blank" href="https://github.com/zhheo/Post-Abstract-AI">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/github.com/zhheo/Post-Abstract-AI.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">Post-Abstract-AI</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>我手头的计算资源并不允许我部署一个开放到公网的大模型，不然我也去搭一个玩了（</p><hr><p>我不使用上面的插件有以下几点考虑：</p><ol><li><p>穷，虽然洪哥给的价格真的很便宜，但我想了一下我每月还得养个ChatGPT以及好几台服务器，但收入仅仅只有博士的低保，在需求可以满足的情况下能省则省吧～</p></li><li><p>使用我的方案确实已经可以满足我的需求了。</p></li><li><p>事实上，TianliGPT（插件所调用的AI）最多只支持5000字符的输入（<a href="https://postsummary.zhheo.com/parameters.html#tianligpt-wordlimit">tianliGPT_wordLimit</a>），而我随便一篇题解就是上万字符，即使去掉代码块、超链接等元素，也仍有近7k。Cover不了文章内容的话，生成的摘要质量或许差点意思。</p></li></ol><p>   <img src="https://blogfiles.oss.fyz666.xyz/png/4b6eca8c-715c-4f02-8ccf-e672eaa7943f.png" alt="image-20240518045609205"></p><p>   <img src="https://blogfiles.oss.fyz666.xyz/png/1e01bfb3-5b3e-4543-8bfe-80c6dc355bbb.png" alt="image-20240518212241221"></p><p>如果不考虑与读者的互动效果，这个功能只需要负责为每篇文章生成一次摘要，洪哥开发的插件其实也有类似的缓存功能，在<code>input token</code>完全相同的情况下，只有首次输入会消耗账号额度，而后面的调用将直接返回数据库缓存，不消耗额度，当<code>input token</code>产生变化时，则需要重新生成。</p><p>然而，这个特性对我来说却不算特别友好，由于我经常会对以前发布的文章进行一些修改，以尽量让它们保持可靠性，所以。。。带了这个插件我就不好随意改文章了，毕竟即使只改了一个标点，也得重新消耗额度来生成新的摘要。我需要在我可接受的手动操作范围内，更加自由地决定什么时候需要重新生成摘要。</p><p>于是，一种愚蠢的方法就诞生了。</p><hr><h2 id="我的方法"><a href="#我的方法" class="headerlink" title="我的方法"></a>我的方法</h2><h3 id="生成摘要"><a href="#生成摘要" class="headerlink" title="生成摘要"></a>生成摘要</h3><p><a href="https://kimi.moonshot.cn/">Kimi Chat</a>号称能一口气读完20万字的小说，这上下文长度都随便给博士论文生成摘要了，区区博客文章就是小意思，并且Kimi Chat还能一次拖入最多50个文本文件，这批处理功能不就来了？（或者也可以购买Kimi官方的API来进行批处理，<del>至于逆向web接口的操作，我只能说很刑</del>）</p><p>随意写了段Prompt，送进Kimi：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">Role</span><span class="token punctuation">:</span> 内容解析与摘要专家<span class="token punctuation">-</span> <span class="token key atrule">Background</span><span class="token punctuation">:</span> 用户将发送Markdown文件，需要从中提取特定字段，并生成摘要，最后将信息格式化为JSON。<span class="token punctuation">-</span> <span class="token key atrule">Profile</span><span class="token punctuation">:</span> 你是一位专业的文档解析专家，擅长从文本中提取关键信息，并能够用精炼的语言撰写摘要。<span class="token punctuation">-</span> <span class="token key atrule">Skills</span><span class="token punctuation">:</span> Markdown解析、摘要撰写、JSON格式化。<span class="token punctuation">-</span> <span class="token key atrule">Goals</span><span class="token punctuation">:</span> 提取Markdown文件中的'id'字段，为每个文件生成精炼摘要，并输出为JSON格式的键值对。<span class="token punctuation">-</span> <span class="token key atrule">Constrains</span><span class="token punctuation">:</span> 提取的id必须准确无误，摘要必须包含主语并简洁描述文章核心内容，不包含所有细节，长度不超过100字，且输出内容仅为一个json字典。<span class="token punctuation">-</span> <span class="token key atrule">OutputFormat</span><span class="token punctuation">:</span> 仅输出一个JSON字典，键为'id'，值为摘要。<span class="token punctuation">-</span> <span class="token key atrule">Workflow</span><span class="token punctuation">:</span>  1. 解析Markdown文件的front<span class="token punctuation">-</span>matter以提取'id'字段。  2. 阅读并理解文件内容，提炼出核心内容，撰写摘要。  3. 将'id'和摘要组合成JSON格式，并输出。<span class="token punctuation">-</span> <span class="token key atrule">Examples</span><span class="token punctuation">:</span>  <span class="token key atrule">文件1</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">123</span>    <span class="token punctuation">-</span> 摘要：这篇文章探讨了远程工作对员工福祉的影响。  <span class="token key atrule">文件2</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">456</span>    <span class="token punctuation">-</span> 摘要：报告分析了全球变暖对生态系统的长期影响。  <span class="token key atrule">Output</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span>        <span class="token key atrule">"123"</span><span class="token punctuation">:</span> <span class="token string">"这篇文章探讨了远程工作对员工福祉的影响。"</span><span class="token punctuation">,</span>        <span class="token key atrule">"456"</span><span class="token punctuation">:</span> <span class="token string">"报告分析了全球变暖对生态系统的长期影响。"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">-</span> <span class="token key atrule">Initialization</span><span class="token punctuation">:</span> 欢迎使用自动化文档处理服务。请发送您的markdown文件，我将开始提取id并生成摘要。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就可以快乐地把一堆Markdown拖进去了。不过当上下文变得很长的时候，提示词的作用会被弱化，因此可以在后面继续给Kimi提要求，让它进行修改。（如果一篇一篇处理则没有这个问题）</p><p>这样一顿操作，就获取到了一个摘要字典，通过<code>id</code>与文章形成一一对应。</p><p>接下来，在博客的<code>source</code>目录下新建<code>abstract</code>目录，写个脚本把前面获取到的<code>json</code>格式摘要字典以<code>id</code>为文件名，摘要为文本内容，依次写到<code>source/abstract</code>目录下。这样，摘要就生成完毕了。</p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>修改主题文件中负责处理<code>post</code>页面的模板，以我所用的Butterfly主题为例，其对应的文件是<code>themes/butterfly/layout/post.pug</code>，我们在文章内容的顶部加上一些组件，负责显示摘要。</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">--- a/themes/butterfly/layout/post.pug    2024-05-13 15:20:58</span><span class="token coord">+++ b/themes/butterfly/layout/post.pug    2024-05-17 15:49:45</span><span class="token coord">@@ -4,7 +4,14 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  #post</span><span class="token prefix unchanged"> </span><span class="token line">    if top_img === false</span><span class="token prefix unchanged"> </span><span class="token line">      include includes/header/post-info.pug</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    #ai-container</span><span class="token prefix inserted">+</span><span class="token line">      #ai-header</span><span class="token prefix inserted">+</span><span class="token line">        #ai-title</span><span class="token prefix inserted">+</span><span class="token line">          i.fas.fa-robot &amp;nbsp;</span><span class="token prefix inserted">+</span><span class="token line">          span AI摘要</span><span class="token prefix inserted">+</span><span class="token line">          b#ai-label</span><span class="token prefix inserted">+</span><span class="token line">            a(href="https://kimi.moonshot.cn/") Kimi Chat</span><span class="token prefix inserted">+</span><span class="token line">      #ai-content</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    article#article-container.post-content!=page.content</span><span class="token prefix unchanged"> </span><span class="token line">    include includes/post/post-copyright.pug</span><span class="token prefix unchanged"> </span><span class="token line">    .tag_share</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建一个<code>source/css/ai-abstract.css</code>：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#ai-container</span><span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #c9c9c9<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #fffd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">[data-theme="dark"] #ai-container</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #0008<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#ai-label</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 59%<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #6cf<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-2px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#ai-header</span><span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #6cf<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 10px 0 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.8<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span>17px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#ai-content</span><span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span>18px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#ai-title</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> none<span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#ai-content::after</span><span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'|'</span><span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> blink 1s infinite<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建一个<code>source/js/ai-abstract.js</code>：</p><p>这里前面的一些逻辑主要负责判断是否需要请求摘要，以及获取到摘要文件的文件名，需要根据需求自行更改，不过非常容易。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">loadAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#article-container"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> key<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>match <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/blog\/(\d+)\/?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> key <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">try</span><span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".st"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> http<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    http<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/abstract/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">?t=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>    http<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    http<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">var</span> text <span class="token operator">=</span> http<span class="token punctuation">.</span>responseText<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^>]*></span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">var</span> text<span class="token operator">=</span><span class="token string">"文章摘要遇到异常。"</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> dom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#ai-content'</span><span class="token punctuation">)</span>            <span class="token keyword">const</span> data <span class="token operator">=</span> text<span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">writing</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    dom<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> data<span class="token punctuation">[</span>index<span class="token punctuation">]</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token function">writing</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">++</span>index<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> s<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span>                    s<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">"st"</span><span class="token punctuation">;</span>                    s<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">"#ai-content::after&#123;content:''!important;&#125;"</span>                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">writing</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，将这两个文件嵌入到博客中：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>    <span class="token punctuation">...</span>    <span class="token key atrule">bottom</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/css/ai<span class="token punctuation">-</span>abstract.css"<span class="token punctuation">></span>        <span class="token punctuation">-</span> &lt;script type="text/javascript" data<span class="token punctuation">-</span>pjax src="/js/ai<span class="token punctuation">-</span>abstract.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如不需要<code>pjax</code>就将<code>data-pjax</code>去掉。</p><p>这样，一个比较简陋，但基本需求已经满足的AI摘要功能就完成了，其缺点无非是：缺少互动性、无法实时自动化地生成摘要，但毕竟零成本啊，还要什么自行车？</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/butterfly%E4%B8%BB%E9%A2%98/">Butterfly主题</category>
      
      <category domain="https://blog.fyz666.xyz/tags/kimi-chat/">Kimi Chat</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11603/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用MinIO自部署对象存储服务</title>
      <link>https://blog.fyz666.xyz/blog/11574/</link>
      <guid>https://blog.fyz666.xyz/blog/11574/</guid>
      <pubDate>Fri, 17 May 2024 16:47:38 GMT</pubDate>
      
      <description>考虑再三，还是选择自部署对象存储服务</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h2><p><a href="/blog/11170/">之前的文章</a>曾提到我将GitHub作为对象存储服务来使用，但也提到GitHub是禁止这种行为的，出于<del>遵守协议</del>善待GitHub的考虑，我在之后重新调研了国内外的一些对象存储、图床服务商，最终得出结论： </p><div class="note primary simple"><p>免费的服务往往会在暗中为你标上了其他形式的价格。</p></div><p>而一些大厂提供的服务，其定价文档堪比阅读理解，稍有不慎就会栽进坑里。</p><p>另外，还有一些比较容易被忽略的细节：</p><ul><li>绝大多数的服务商都会将请求次数和流量分开计费，有的流量免费但请求收费；有的则有免费的请求额度，但流量则以GB为单位额外付费。</li><li>部分服务商的HTTPS请求是按次数付费的。</li><li>有的服务商，看似拥有极其慷慨的free plan，但很多限制并没有写到pricing页面里，而是在你注册进入控制台后，在很隐蔽的一个页面下才能翻到。</li><li>一些服务商的定价规则包含很多具有一定歧义的“术语”，你不实际体验一下是不会理解它的真正含义的（往往都是坑），而体验的过程无疑又浪费了时间和精力。</li><li>一些国外服务商已经被墙了。</li></ul><p>如果我要为了图片的稳定性去购买一些数据持久性高达12个9的服务，那倒不如把手上闲置的服务器用起来，结合快照备份回滚功能，也能保证基本的稳定性了。</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/31f1b16a-001a-4eeb-8cf0-dfcbf359c58d.png" alt="image-20240517173449985"></p><p>于是，在多种考虑之下，我决定自己部署一个对象存储服务。</p><hr><p>这里我选择了开源分布式对象存储服务：MinIO</p><a class="tag-Link" target="_blank" href="https://github.com/minio/minio">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/github.com/minio/minio.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">MinIO</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>其有Docker镜像，部署起来也十分方便。</p><h2 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h2><p>首先写一个<code>docker-compose.yml</code>文件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.7'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> quay.io/minio/minio    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> minio    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_DOMAIN=oss<span class="token punctuation">-</span>api.example.com      <span class="token punctuation">-</span> MINIO_SERVER_URL=https<span class="token punctuation">:</span>//oss<span class="token punctuation">-</span>api.example.com/      <span class="token punctuation">-</span> MINIO_BROWSER_REDIRECT_URL=https<span class="token punctuation">:</span>//oss<span class="token punctuation">-</span>console.example.com/      <span class="token punctuation">-</span> MINIO_ROOT_USER=&lt;ADMIN_USERNAME<span class="token punctuation">></span>      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=&lt;ADMIN_PASSWORD<span class="token punctuation">></span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"127.0.0.1:9000:9000"</span>      <span class="token punctuation">-</span> <span class="token string">"127.0.0.1:9090:9090"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/data    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"CMD"</span><span class="token punctuation">,</span> <span class="token string">"curl"</span><span class="token punctuation">,</span> <span class="token string">"-f"</span><span class="token punctuation">,</span> <span class="token string">"http://localhost:9000/minio/health/live"</span><span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 30s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 20s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">3</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server /data <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9090"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述文件中，首先需要修改<code>&lt;ADMIN_USERNAME&gt;</code>与<code>&lt;ADMIN_PASSWORD&gt;</code>，然后修改几个域名与网址：</p><ul><li><code>MINIO_DOMAIN</code>：简单理解为服务提供的api的域名</li><li><code>MINIO_SERVER_URL</code>：<code>MINIO_DOMAIN</code>带上<code>scheme</code></li><li><code>MINIO_BROWSER_REDIRECT_URL</code>：web控制台网址</li></ul><p>自然，需要将这两个域名都解析到服务器ip。</p><p>运行<code>docker-compose up -d</code>启动服务。</p><h2 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h2><p>因为有两个服务（api与web console），所以需要写两组配置。</p><p>api反代配置：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">server_name</span> oss-api.example.com</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ssl_certificate</span> /path/to/fullchain</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /path/to/key</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ignore_invalid_headers</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">0</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_buffering</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$scheme</span> = http)</span> <span class="token punctuation">&#123;</span>      <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">""</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">chunked_transfer_encoding</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:9000</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>web console反代配置：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">server_name</span> oss-console.example.com</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ssl_certificate</span> /path/to/fullchain</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /path/to/key</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">ignore_invalid_headers</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">0</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_buffering</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$scheme</span> = http)</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Upgrade <span class="token variable">$http_upgrade</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">"upgrade"</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">chunked_transfer_encoding</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:9090</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后运行<code>nginx -s reload</code></p><h2 id="上手使用"><a href="#上手使用" class="headerlink" title="上手使用"></a>上手使用</h2><p>用前面指定的管理员账号密码登录控制台，选择左侧栏”Buckets”，再点击右上角”Create Bucket”，创建一个存储桶：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/dbb5a284-0b26-443a-bc86-bab59ee93140.png" alt="image-20240517180035818"></p><p>这里我们创建了一个名为<code>any-bucket-name</code>的桶。</p><p>接下来，对这个桶进行最基本的权限配置，由于我是拿它当图床用的，自然需要开启匿名读的权限。</p><p>在”Buckets”栏下选择刚创建的bucket，点击左侧的”Anonymous”，添加一条规则：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/21ca8842-3d2a-43d4-84b2-0fe8d9391fb5.png" alt="image-20240517180803747"></p><p>点击左侧的”Summary”，修改”Access Policy”，选择”Custom”</p><ol><li>将<code>Action</code>字段下的<code>&quot;s3:ListBucket&quot;</code>删除，这是为了禁止匿名查看文件列表。</li><li>可以在<code>Resource</code>值为<code>arn:aws:s3:::any-bucket-name/*</code>的配置后面增加一条<code>Condition</code>字段，用来防盗链。</li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"Version"</span><span class="token operator">:</span> <span class="token string">"2012-10-17"</span><span class="token punctuation">,</span>    <span class="token property">"Statement"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"Effect"</span><span class="token operator">:</span> <span class="token string">"Allow"</span><span class="token punctuation">,</span>            <span class="token property">"Principal"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"AWS"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"*"</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"Action"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"s3:GetBucketLocation"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"Resource"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"arn:aws:s3:::any-bucket-name"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"Effect"</span><span class="token operator">:</span> <span class="token string">"Allow"</span><span class="token punctuation">,</span>            <span class="token property">"Principal"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"AWS"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                    <span class="token string">"*"</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"Action"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"s3:GetObject"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"Resource"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"arn:aws:s3:::any-bucket-name/*"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"Condition"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"StringLike"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token property">"aws:Referer"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token string">"https://domain.com/*"</span>                    <span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，可选的一项：在左侧栏”Identity-&gt;Users”下创建一个读写权限的普通用户，用以替代管理员进行日常操作，登录普通用户后，可创建Access Key、Secret Key用于调用API：</p><a class="tag-Link" target="_blank" href="https://min.io/docs/minio/linux/developers/minio-drivers.html">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/min.io/docs/minio/linux/developers/minio-drivers.html.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">Software Development Kits</div>            <div class="tag-link-sitename">MinIO Document</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>可以通过前面定义的<code>MINIO_DOMAIN</code>来访问存储桶里面的文件，有两种方法：</p><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">Path Style</button><button type="button" class="tab " data-href="tab1-2">DNS Style</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>什么都不做修改的情况下，我们已经可以通过这种子路径风格的URL对一个桶内的文件进行访问：</p><p><code>https://oss-api.example.com/&lt;bucket&gt;/&lt;path&gt;</code></p></div><div class="tab-item-content" id="tab1-2"><p>如果我们做一个通配符DNS解析，将<code>*.oss-api.example.com</code>解析到服务器，那么我们将前面为api配置的NGINX配置中的<code>server_name</code>修改一下：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">server_name</span> *.oss-api.example.com oss-api.example.com</span><span class="token punctuation">;</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>即可通过下面这种DNS风格的URL对桶内文件进行访问：</p><p><code>https://&lt;bucket&gt;.oss-api.example.com/&lt;path&gt;</code></p><p>当然，这里必须先为<code>*.oss-api.example.com</code>申请三级通配符域名证书，二级通配符域名<code>*.example.com</code>的证书是不能用的。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E7%9E%8E%E6%8D%A3%E9%BC%93%E7%BB%8F%E5%8E%86/">瞎捣鼓经历</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/docker/">Docker</category>
      
      <category domain="https://blog.fyz666.xyz/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/">对象存储</category>
      
      <category domain="https://blog.fyz666.xyz/tags/minio/">MinIO</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11574/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>魔改Butterfly主题的链接数据存放模式</title>
      <link>https://blog.fyz666.xyz/blog/11475/</link>
      <guid>https://blog.fyz666.xyz/blog/11475/</guid>
      <pubDate>Wed, 15 May 2024 00:28:25 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;Butterfly主题在版本&lt;code&gt;4.0.0&lt;/code&gt;引入了友情链接的&lt;code&gt;json&lt;/code&gt;远程拉取：&lt;/p&gt;
&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot;</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>Butterfly主题在版本<code>4.0.0</code>引入了友情链接的<code>json</code>远程拉取：</p><a class="tag-Link" target="_blank" href="https://butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E6%B7%BB%E5%8A%A0">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E6%B7%BB%E5%8A%A0.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">友情链接添加</div>            <div class="tag-link-sitename">Butterfly</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>大意是在front-matter中设置<code>flink_url</code>（指向一个<code>json</code>文件链接）来导入<code>json</code>格式的数据。</p><p>该主题还有另一种友情链接文件存放模式，是将<code>link.yml</code>放在网站的<code>source/_data</code>目录下，然后在页面的front-matter中设置<code>type: &quot;link&quot;</code>来自动读取此文件。</p><p>然而这两种不同模式的存在让我觉得很不自然，尤其是前面提到的第二种模式下把文件路径<code>source/_data/link.yml</code>写死而不支持自定义的行为。我觉得更加自然的方式应该是将所有链接数据文件都以相同的格式（比如都是<code>yaml</code>）存放在<code>source/_data</code>目录下，然后通过一个字段来指定<code>link</code>页面读取的是哪个文件。虽然远程拉取的模式支持从外部网站导入<code>json</code>，但通常情况下不会有这种需求（至少我没有）。</p><p>于是开始魔改主题文件，在改之前，我总结了一下我的需求：</p><ul><li>所有链接数据文件以<code>yaml</code>格式存放在<code>source/_data</code>目录。</li><li>在<code>type: &quot;link&quot;</code>的页面下定义front-matter字段<code>flink_file</code>，通过该字段指示需要读取的文件（省略<code>yaml</code>文件扩展名）。</li><li><code>flink_file</code>字段不存在时，默认读取<code>source/_data/link.yml</code>。</li></ul><p>修改主题文件<code>themes/butterfly/layout/includes/page/flink.pug</code>如下：</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">--- a/themes/butterfly/layout/includes/page/flink.pug</span><span class="token coord">+++ b/themes/butterfly/layout/includes/page/flink.pug</span><span class="token coord">@@ -1,10 +1,10 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">#article-container</span><span class="token prefix unchanged"> </span><span class="token line">  .flink</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    - let &#123; content, random, flink_url &#125; = page</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    - let &#123; content, random, flink_file &#125; = page</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    - let pageContent = content</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    - const linkData = flink_file ? site.data[flink_file] : site.data.link || false</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    if flink_url || random</span><span class="token prefix deleted">-</span><span class="token line">      - const linkData = flink_url ? false : site.data.link || false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    if random</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      script.</span><span class="token prefix unchanged"> </span><span class="token line">        (()=>&#123;</span><span class="token prefix unchanged"> </span><span class="token line">          const replaceSymbol = (str) => &#123;</span></span><span class="token coord">@@ -44,39 +44,32 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">          &#125;</span><span class="token prefix unchanged"> </span><span class="token line"></span><span class="token prefix unchanged"> </span><span class="token line">          const linkData = !&#123;JSON.stringify(linkData)&#125;</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          if (!&#123;Boolean(flink_url)&#125;) &#123;</span><span class="token prefix deleted">-</span><span class="token line">            fetch("!&#123;url_for(flink_url)&#125;")</span><span class="token prefix deleted">-</span><span class="token line">              .then(response => response.json())</span><span class="token prefix deleted">-</span><span class="token line">              .then(add)</span><span class="token prefix deleted">-</span><span class="token line">          &#125; else if (linkData) &#123;</span><span class="token prefix deleted">-</span><span class="token line">            add(linkData)</span><span class="token prefix deleted">-</span><span class="token line">          &#125;</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">          add(linkData)</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        &#125;)()</span><span class="token prefix unchanged"> </span><span class="token line"></span><span class="token prefix unchanged"> </span><span class="token line">    else</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      if site.data.link</span><span class="token prefix deleted">-</span><span class="token line">        - let result = ""</span><span class="token prefix deleted">-</span><span class="token line">        each i in site.data.link</span><span class="token prefix deleted">-</span><span class="token line">          - let className = i.class_name ? markdown(`## $&#123;i.class_name&#125;`) : ""</span><span class="token prefix deleted">-</span><span class="token line">          - let classDesc = i.class_desc ? `&lt;div class="flink-desc">$&#123;i.class_desc&#125;&lt;/div>` : ""</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      - let result = ""</span><span class="token prefix inserted">+</span><span class="token line">      each i in linkData</span><span class="token prefix inserted">+</span><span class="token line">        - let className = i.class_name ? markdown(`## $&#123;i.class_name&#125;`) : ""</span><span class="token prefix inserted">+</span><span class="token line">        - let classDesc = i.class_desc ? `&lt;div class="flink-desc">$&#123;i.class_desc&#125;&lt;/div>` : ""</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          - let listResult = ""</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        - let listResult = ""</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          each j in i.link_list</span><span class="token prefix deleted">-</span><span class="token line">            - </span><span class="token prefix deleted">-</span><span class="token line">              listResult += `</span><span class="token prefix deleted">-</span><span class="token line">                &lt;div class="flink-list-item"></span><span class="token prefix deleted">-</span><span class="token line">                  &lt;a href="$&#123;j.link&#125;" title="$&#123;j.name&#125;"></span><span class="token prefix deleted">-</span><span class="token line">                    &lt;div class="flink-item-icon"></span><span class="token prefix deleted">-</span><span class="token line">                      &lt;img class="no-lightbox" src="$&#123;j.avatar&#125;" onerror='this.onerror=null;this.src="$&#123;url_for(theme.error_img.flink)&#125;"' alt="$&#123;j.name&#125;" /></span><span class="token prefix deleted">-</span><span class="token line">                    &lt;/div></span><span class="token prefix deleted">-</span><span class="token line">                    &lt;div class="flink-item-name">$&#123;j.name&#125;&lt;/div> </span><span class="token prefix deleted">-</span><span class="token line">                    &lt;div class="flink-item-desc" title="$&#123;j.descr&#125;">$&#123;j.descr&#125;&lt;/div></span><span class="token prefix deleted">-</span><span class="token line">                  &lt;/a></span><span class="token prefix deleted">-</span><span class="token line">                &lt;/div>`</span><span class="token prefix deleted">-</span><span class="token line">            -</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        each j in i.link_list</span><span class="token prefix inserted">+</span><span class="token line">          - </span><span class="token prefix inserted">+</span><span class="token line">            listResult += `</span><span class="token prefix inserted">+</span><span class="token line">              &lt;div class="flink-list-item"></span><span class="token prefix inserted">+</span><span class="token line">                &lt;a href="$&#123;j.link&#125;" title="$&#123;j.name&#125;"></span><span class="token prefix inserted">+</span><span class="token line">                  &lt;div class="flink-item-icon"></span><span class="token prefix inserted">+</span><span class="token line">                    &lt;img class="no-lightbox" src="$&#123;j.avatar&#125;" onerror='this.onerror=null;this.src="$&#123;url_for(theme.error_img.flink)&#125;"' alt="$&#123;j.name&#125;" /></span><span class="token prefix inserted">+</span><span class="token line">                  &lt;/div></span><span class="token prefix inserted">+</span><span class="token line">                  &lt;div class="flink-item-name">$&#123;j.name&#125;&lt;/div> </span><span class="token prefix inserted">+</span><span class="token line">                  &lt;div class="flink-item-desc" title="$&#123;j.descr&#125;">$&#123;j.descr&#125;&lt;/div></span><span class="token prefix inserted">+</span><span class="token line">                &lt;/a></span><span class="token prefix inserted">+</span><span class="token line">              &lt;/div>`</span><span class="token prefix inserted">+</span><span class="token line">          -</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">          - result += `$&#123;className&#125;$&#123;classDesc&#125; &lt;div class="flink-list">$&#123;listResult&#125;&lt;/div>`</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        - result += `$&#123;className&#125;$&#123;classDesc&#125; &lt;div class="flink-list">$&#123;listResult&#125;&lt;/div>`</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">        - pageContent = result + pageContent</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      - pageContent = result + pageContent</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    != pageContent</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大功告成！</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/butterfly%E4%B8%BB%E9%A2%98/">Butterfly主题</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11475/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Butterfly主题tabs外挂标签下代码块高度限制失效的解决方案</title>
      <link>https://blog.fyz666.xyz/blog/11402/</link>
      <guid>https://blog.fyz666.xyz/blog/11402/</guid>
      <pubDate>Fri, 10 May 2024 14:22:11 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;Hexo的Butterfly主题带有一些特有的、非Markdown语法的外挂标签，作为一种写作语法扩展非常好用。然而在使用&lt;code&gt;tabs&lt;/code&gt;标签时，遇到了内部代码块高度限制失效的问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我在Butterfly的主题文件中设置了代码块的</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>Hexo的Butterfly主题带有一些特有的、非Markdown语法的外挂标签，作为一种写作语法扩展非常好用。然而在使用<code>tabs</code>标签时，遇到了内部代码块高度限制失效的问题。</p><hr><p>我在Butterfly的主题文件中设置了代码块的高度限制：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_height_limit</span><span class="token punctuation">:</span> <span class="token number">300</span> <span class="token comment"># unit: px</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般情况下，当代码块高度超过300px时便会隐藏超出范围的代码，并添加一个展开按钮，但这个特性在tabs标签下的非默认tab中失效。</p><p>审计了渲染代码后，我找到了处理这部分逻辑的代码，其位于主题目录下的<code>source/js/main.js</code>文件中的<code>createEle</code>函数：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">createEle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">lang<span class="token punctuation">,</span> item<span class="token punctuation">,</span> service</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> fragment <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>isShowTool<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> hlTools <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        hlTools<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">highlight-tools </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>highlightShrinkClass<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>        hlTools<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> highlightShrinkEle <span class="token operator">+</span> lang <span class="token operator">+</span> highlightCopyEle        btf<span class="token punctuation">.</span><span class="token function">addEventListenerPjax</span><span class="token punctuation">(</span>hlTools<span class="token punctuation">,</span> <span class="token string">'click'</span><span class="token punctuation">,</span> highlightToolsFn<span class="token punctuation">)</span>        fragment<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>hlTools<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>highlightHeightLimit <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>offsetHeight <span class="token operator">></span> highlightHeightLimit <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> ele <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        ele<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'code-expand-btn'</span>        ele<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;i class="fas fa-angle-double-down">&lt;/i>'</span>        btf<span class="token punctuation">.</span><span class="token function">addEventListenerPjax</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token string">'click'</span><span class="token punctuation">,</span> expandCode<span class="token punctuation">)</span>        fragment<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>service <span class="token operator">===</span> <span class="token string">'hl'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        item<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>fragment<span class="token punctuation">,</span> item<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        item<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>fragment<span class="token punctuation">,</span> item<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于<code>display:none</code>的元素其<code>offsetHeight</code>会变成0，导致无法进入函数中间的那个if语句，也就无法按我们的需求进行渲染。</p><p>而对于这个问题，早就有了现成的解决方案。</p><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">使用 jQuery Actual 插件</button><button type="button" class="tab " data-href="tab1-2">使用原生JS解决</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>我们可以引入<a href="https://github.com/dreamerslab/jquery.actual">jQuery Actual插件</a>，通过它来获取隐藏元素的实际高度：</p><p>在butterfly的主题文件中<code>inject.head</code>项下引入jquery.actual文件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> &lt;script src="https<span class="token punctuation">:</span>//cdnjs.cloudflare.com/ajax/libs/jquery.actual/1.0.19/jquery.actual.min.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info simple"><p>该文件还依赖于：jQuery &gt;= 1.2.3</p></div><p>然后修改<code>themes/butterfly/source/js/main.js</code>中的<code>createEle</code>函数：</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">--- a/themes/butterfly/source/js/main.js</span><span class="token coord">+++ b/themes/butterfly/source/js/main.js</span>@@ -134,8 +134,9 @@ document.addEventListener('DOMContentLoaded', function () &#123;<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        btf.addEventListenerPjax(hlTools, 'click', highlightToolsFn)</span><span class="token prefix unchanged"> </span><span class="token line">        fragment.appendChild(hlTools)</span><span class="token prefix unchanged"> </span><span class="token line">      &#125;</span><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      if (highlightHeightLimit &amp;&amp; item.offsetHeight > highlightHeightLimit + 30) &#123;</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      if (highlightHeightLimit &amp;&amp; $(item).actual('height') > highlightHeightLimit + 30) &#123;</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        const ele = document.createElement('div')</span><span class="token prefix unchanged"> </span><span class="token line">        ele.className = 'code-expand-btn'</span><span class="token prefix unchanged"> </span><span class="token line">        ele.innerHTML = '&lt;i class="fas fa-angle-double-down">&lt;/i>'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="tab-item-content" id="tab1-2"><p>毕竟为了一处小问题引入一个新的东西有点臃肿，不愿意引入jQuery的话还可以用原生JS解决。阅读了jQuery Actual的代码后我发现它是通过将隐藏起来的块暂时修改为：<code>visibility: hidden; display: block;</code>来获取它的高度，这是因为<code>visibility: hidden;</code>状态虽然也是隐藏，但仍会占据页面空间。在取得其高度后再恢复原有的样式。于是我们可以手写这个逻辑，来修改<code>themes/butterfly/source/js/main.js</code>：</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">--- a/themes/butterfly/source/js/main.js</span><span class="token coord">+++ b/themes/butterfly/source/js/main.js</span><span class="token coord">@@ -124,6 +124,39 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      this.classList.toggle('expand-done')</span><span class="token prefix unchanged"> </span><span class="token line">    &#125;</span><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    const getActualHeight = function (item) &#123;</span><span class="token prefix inserted">+</span><span class="token line">      let tmp = []</span><span class="token prefix inserted">+</span><span class="token line">      let hidden = []</span><span class="token prefix inserted">+</span><span class="token line">      function fix() &#123;</span><span class="token prefix inserted">+</span><span class="token line">      </span><span class="token prefix inserted">+</span><span class="token line">          let current = item</span><span class="token prefix inserted">+</span><span class="token line">          while (current !== document.body &amp;&amp; current != null) &#123;</span><span class="token prefix inserted">+</span><span class="token line">              if (window.getComputedStyle(current).display === 'none') &#123;</span><span class="token prefix inserted">+</span><span class="token line">                  hidden.push(current)</span><span class="token prefix inserted">+</span><span class="token line">              &#125;</span><span class="token prefix inserted">+</span><span class="token line">              current = current.parentNode</span><span class="token prefix inserted">+</span><span class="token line">          &#125;</span><span class="token prefix inserted">+</span><span class="token line">          let style = 'visibility: hidden !important; display: block !important; '</span><span class="token prefix inserted">+</span><span class="token line">  </span><span class="token prefix inserted">+</span><span class="token line">          hidden.forEach(function (elem) &#123;</span><span class="token prefix inserted">+</span><span class="token line">              var thisStyle = elem.getAttribute('style') || ''</span><span class="token prefix inserted">+</span><span class="token line">              tmp.push(thisStyle)</span><span class="token prefix inserted">+</span><span class="token line">              elem.setAttribute('style', thisStyle ? thisStyle + ';' + style : style)</span><span class="token prefix inserted">+</span><span class="token line">          &#125;)</span><span class="token prefix inserted">+</span><span class="token line">      &#125;</span><span class="token prefix inserted">+</span><span class="token line">      function restore() &#123;</span><span class="token prefix inserted">+</span><span class="token line">          hidden.forEach((elem, idx) => &#123;</span><span class="token prefix inserted">+</span><span class="token line">              let _tmp = tmp[idx]</span><span class="token prefix inserted">+</span><span class="token line">              if( _tmp === '' ) elem.removeAttribute('style')</span><span class="token prefix inserted">+</span><span class="token line">              else elem.setAttribute('style', _tmp)</span><span class="token prefix inserted">+</span><span class="token line">          &#125;)</span><span class="token prefix inserted">+</span><span class="token line">      &#125;</span><span class="token prefix inserted">+</span><span class="token line">      fix()</span><span class="token prefix inserted">+</span><span class="token line">      let height = item.offsetHeight</span><span class="token prefix inserted">+</span><span class="token line">      restore()</span><span class="token prefix inserted">+</span><span class="token line">      return height</span><span class="token prefix inserted">+</span><span class="token line">    &#125;</span><span class="token prefix inserted">+</span><span class="token line"></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    const createEle = (lang, item, service) => &#123;</span><span class="token prefix unchanged"> </span><span class="token line">      const fragment = document.createDocumentFragment()</span><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token coord">@@ -135,7 +168,7 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        fragment.appendChild(hlTools)</span><span class="token prefix unchanged"> </span><span class="token line">      &#125;</span><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      if (highlightHeightLimit &amp;&amp; item.offsetHeight > highlightHeightLimit + 30) &#123;</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      if (highlightHeightLimit &amp;&amp; getActualHeight(item) > highlightHeightLimit + 30) &#123;</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        const ele = document.createElement('div')</span><span class="token prefix unchanged"> </span><span class="token line">        ele.className = 'code-expand-btn'</span><span class="token prefix unchanged"> </span><span class="token line">        ele.innerHTML = '&lt;i class="fas fa-angle-double-down">&lt;/i>'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><hr><p>在作者的提示下才发现文档里已经有写：</p><a class="tag-Link" target="_blank" href="https://butterfly.js.org/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC%E9%AB%98%E5%BA%A6%E9%99%90%E5%88%B6">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/butterfly.js.org/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC%E9%AB%98%E5%BA%A6%E9%99%90%E5%88%B6.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">代码高度限制</div>            <div class="tag-link-sitename">Butterfly</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><ul><li>不适用于隐藏后的代码块（ css 设置 display: none）</li></ul><p>看来这是主题的预期行为。不过我个人认为让隐藏的代码块同样折叠起来更为合理。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/debug/">Debug</category>
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/javascript/">JavaScript</category>
      
      <category domain="https://blog.fyz666.xyz/tags/web%E5%89%8D%E7%AB%AF/">Web前端</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/butterfly%E4%B8%BB%E9%A2%98/">Butterfly主题</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11402/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>在Hexo博客中添加GitHub Calendar</title>
      <link>https://blog.fyz666.xyz/blog/11354/</link>
      <guid>https://blog.fyz666.xyz/blog/11354/</guid>
      <pubDate>Fri, 10 May 2024 02:48:17 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;逛别人的博客时，发现有许多博主的主页上会嵌入一个Github Calendar，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>逛别人的博客时，发现有许多博主的主页上会嵌入一个Github Calendar，如下图所示：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/8ffbf16f-d70a-4804-a5c4-551ccaeebab6.png" alt="image-20240510025333998"></p><p><del>放置在homepage可以让主页显得丰富一些。</del></p><p>简单一搜，找到了这个项目的出处：</p><a class="tag-Link" target="_blank" href="https://github.com/Bloggify/github-calendar">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/github.com/Bloggify/github-calendar.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">github-calendar</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>另外，还找到一位大佬将该项目集成的Hexo插件：</p><a class="tag-Link" target="_blank" href="https://github.com/Zfour/hexo-github-calendar">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/github.com/Zfour/hexo-github-calendar.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">hexo-github-calendar</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>基于这些信息，本文给出两种安装方法。</p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">直接安装插件</button><button type="button" class="tab " data-href="tab1-2">自己动手魔改主题</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>不愿意魔改主题的朋友可以直接安装前面提到的插件：<a href="https://github.com/Zfour/hexo-github-calendar">hexo-github-calendar</a>，</p><p>并在网站配置文件中添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubcalendar</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">enable_page</span><span class="token punctuation">:</span> /  <span class="token key atrule">user</span><span class="token punctuation">:</span> &lt;username<span class="token punctuation">></span>  <span class="token key atrule">layout</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> id    <span class="token key atrule">name</span><span class="token punctuation">:</span> recent<span class="token punctuation">-</span>posts    <span class="token key atrule">index</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">githubcalendar_html</span><span class="token punctuation">:</span> <span class="token string">'&lt;div class="recent-post-item" style="width:100%;height:auto;padding:10px;">&lt;div id="github_loading" style="width:10%;height:100%;margin:0 auto;display: block">&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"  viewBox="0 0 50 50" style="enable-background:new 0 0 50 50" xml:space="preserve">&lt;path fill="#d0d0d0" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z" transform="rotate(275.098 25 25)">&lt;animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite">&lt;/animateTransform>&lt;/path>&lt;/svg>&lt;/div>&lt;div id="github_container">&lt;/div>&lt;/div>'</span>  <span class="token key atrule">pc_minheight</span><span class="token punctuation">:</span> 280px  <span class="token key atrule">mobile_minheight</span><span class="token punctuation">:</span> 0px  <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f']"</span>  <span class="token key atrule">api</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//python<span class="token punctuation">-</span>github<span class="token punctuation">-</span>calendar<span class="token punctuation">-</span>api.vercel.app/api  <span class="token key atrule">calendar_js</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//fastly.jsdelivr.net/gh/Zfour/hexo<span class="token punctuation">-</span>github<span class="token punctuation">-</span>calendar@1.21/hexo_githubcalendar.js  <span class="token key atrule">plus_style</span><span class="token punctuation">:</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里主要修改的内容是<code>user</code>控制显示的GitHub账号，<code>enable_page</code>控制生效的页面以及<code>layout</code>控制组件的位置，不再细说。</p><p>然而这个<code>api</code>应该是挂掉的，且看后文如何通过vercel自己搭建<code>api</code>。</p></div><div class="tab-item-content" id="tab1-2"><p>安装插件的方式不够灵活，所以我选择自己魔改主题。首先，我希望该组件显示在主页顶部，并且在主页的每一页都有显示，因此，找到主题的<code>layout/includes/layout.pug</code>这个文件，在需要插入组件的位置写上<code>#github_container</code>，例如我：</p><pre class="line-numbers language-pug" data-language="pug"><code class="language-pug"><span class="token punctuation">...</span><span class="token punctuation">-</span><span class="token code"> <span class="token keyword">var</span> isHome <span class="token operator">=</span> <span class="token function">is_home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">'home'</span> <span class="token operator">:</span> <span class="token string">''</span></span><span class="token punctuation">...</span><span class="token flow-control"><span class="token branch keyword">if</span> isHome</span>  <span class="token tag"><span class="token attr-id">#top</span><span class="token attr-class">.top</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">style</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">"width:1500px"</span></span><span class="token punctuation">)</span></span></span>    <span class="token punctuation">...</span>    <span class="token tag"><span class="token attr-class">.cards</span></span>      <span class="token tag"><span class="token attr-class">.gc</span><span class="token attr-id">#gc</span></span>        <span class="token tag"><span class="token attr-class">.recent-post-item</span><span class="token attr-class">.github_container</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">style</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">'width:100%;height:auto;padding:10px;'</span></span><span class="token punctuation">)</span></span></span>          <span class="token tag"><span class="token attr-id">#github_container</span></span><span class="token tag">main<span class="token attr-id">#content-inner</span><span class="token attr-class">.layout</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value">hideAside</span><span class="token punctuation">)</span></span></span> <span class="token plain-text"># 原来的内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过<code>is_home</code>函数判断是否为主页，并且在主页原来该有的内容前面增加一些块，其中包含<code>#github_container</code>。</p><p>然后新建<code>source/js/githubcalendar.js</code>：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">github_canlendar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">git_user<span class="token punctuation">,</span> git_color</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> git_githubapiurl <span class="token operator">=</span> <span class="token string">"https://&lt;your-api>?user="</span> <span class="token operator">+</span> git_user<span class="token punctuation">;</span>    <span class="token keyword">var</span> git_fixed <span class="token operator">=</span> <span class="token string">'fixed'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_px <span class="token operator">=</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_month <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'一月'</span><span class="token punctuation">,</span> <span class="token string">'二月'</span><span class="token punctuation">,</span> <span class="token string">'三月'</span><span class="token punctuation">,</span> <span class="token string">'四月'</span><span class="token punctuation">,</span> <span class="token string">'五月'</span><span class="token punctuation">,</span> <span class="token string">'六月'</span><span class="token punctuation">,</span> <span class="token string">'七月'</span><span class="token punctuation">,</span> <span class="token string">'八月'</span><span class="token punctuation">,</span> <span class="token string">'九月'</span><span class="token punctuation">,</span> <span class="token string">'十月'</span><span class="token punctuation">,</span> <span class="token string">'十一月'</span><span class="token punctuation">,</span> <span class="token string">'十二月'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_monthchange <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_oneyearbeforeday <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_thisday <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_amonthago <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_aweekago <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_weekdatacore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_datacore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_datadate <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_git_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_positionplusdata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_firstweek <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_lastweek <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_beforeweek <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_thisweekdatacore <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_mounthbeforeday <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_mounthfirstindex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_crispedges <span class="token operator">=</span> <span class="token string">'crispedges'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_thisdayindex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_amonthagoindex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_amonthagoweek <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_firstdate <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_first2date <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_montharrbefore <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_monthindex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">retinaCanvas</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">canvas<span class="token punctuation">,</span> context<span class="token punctuation">,</span> ratio</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ratio <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> canvasWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>            <span class="token keyword">var</span> canvasHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> canvasWidth <span class="token operator">*</span> ratio<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> canvasHeight <span class="token operator">*</span> ratio<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">'100%'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> canvasHeight <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>ratio<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">responsiveChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> ratio <span class="token operator">=</span> window<span class="token punctuation">.</span>devicePixelRatio <span class="token operator">||</span> <span class="token number">1</span>        <span class="token keyword">var</span> git_tooltip_container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'git_tooltip_container'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> git_x <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> git_y <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> git_span1 <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> git_span2 <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"gitcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span><span class="token string">'100%'</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> cmessage <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"gitmessage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        width <span class="token operator">=</span> c<span class="token punctuation">.</span>width <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"gitcalendarcanvasbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>        height <span class="token operator">=</span> c<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">9</span> <span class="token operator">*</span> <span class="token number">0.96</span> <span class="token operator">*</span> c<span class="token punctuation">.</span>width <span class="token operator">/</span> git_data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token function">retinaCanvas</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>ctx<span class="token punctuation">,</span> ratio<span class="token punctuation">)</span>        <span class="token keyword">var</span> linemaxwitdh <span class="token operator">=</span> height<span class="token operator">/</span> <span class="token number">9</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> lineminwitdh <span class="token operator">=</span> <span class="token number">0.8</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">;</span>        <span class="token keyword">var</span> setposition <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0.02</span> <span class="token operator">*</span> width<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0.025</span> <span class="token operator">*</span> width<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> week <span class="token keyword">in</span> git_data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            weekdata <span class="token operator">=</span> git_data<span class="token punctuation">[</span>week<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> day <span class="token keyword">in</span> weekdata<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> dataitem <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                git_positionplusdata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dataitem<span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token function">git_thiscolor</span><span class="token punctuation">(</span>git_color<span class="token punctuation">,</span> weekdata<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>                setposition<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>setposition<span class="token punctuation">.</span>y <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>                dataitem<span class="token punctuation">.</span>date <span class="token operator">=</span> weekdata<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">;</span>                dataitem<span class="token punctuation">.</span>count <span class="token operator">=</span> weekdata<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>                dataitem<span class="token punctuation">.</span>x <span class="token operator">=</span> setposition<span class="token punctuation">.</span>x<span class="token punctuation">;</span>                dataitem<span class="token punctuation">.</span>y <span class="token operator">=</span> setposition<span class="token punctuation">.</span>y<span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>setposition<span class="token punctuation">.</span>x<span class="token punctuation">,</span> setposition<span class="token punctuation">.</span>y<span class="token punctuation">,</span> lineminwitdh<span class="token punctuation">,</span> lineminwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>                setposition<span class="token punctuation">.</span>y <span class="token operator">=</span> setposition<span class="token punctuation">.</span>y <span class="token operator">+</span> linemaxwitdh            <span class="token punctuation">&#125;</span>            setposition<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0.025</span> <span class="token operator">*</span> width<span class="token punctuation">;</span>            setposition<span class="token punctuation">.</span>x <span class="token operator">=</span> setposition<span class="token punctuation">.</span>x <span class="token operator">+</span> linemaxwitdh        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth <span class="token operator">></span> <span class="token number">700</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">"600  Arial"</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'#aaa'</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">"日"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.9</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">"二"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.9</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">"四"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5.9</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">"六"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7.9</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> monthindexlist <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token keyword">in</span> git_monthchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>git_monthchange<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> monthindexlist<span class="token punctuation">,</span> <span class="token number">0.7</span> <span class="token operator">*</span> linemaxwitdh<span class="token punctuation">)</span><span class="token punctuation">;</span>                monthindexlist <span class="token operator">=</span> monthindexlist <span class="token operator">+</span> width <span class="token operator">/</span> <span class="token number">12</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        c<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.gitmessage'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                git_tooltip_container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span>            <span class="token punctuation">&#125;</span>            <span class="token function">getMousePos</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> event<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        git_tooltip_container<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.gitmessage'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                git_tooltip_container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">getMousePos</span><span class="token punctuation">(</span><span class="token parameter">canvas<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> rect <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> rect<span class="token punctuation">.</span>left <span class="token operator">*</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width <span class="token operator">/</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> rect<span class="token punctuation">.</span>top <span class="token operator">*</span> <span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height <span class="token operator">/</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> item <span class="token keyword">of</span> git_positionplusdata<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> lenthx <span class="token operator">=</span> x <span class="token operator">-</span> item<span class="token punctuation">.</span>x<span class="token punctuation">;</span>                <span class="token keyword">var</span> lenthy <span class="token operator">=</span> y <span class="token operator">-</span> item<span class="token punctuation">.</span>y<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> lenthx <span class="token operator">&amp;&amp;</span> lenthx <span class="token operator">&lt;</span> lineminwitdh<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> lenthy <span class="token operator">&amp;&amp;</span> lenthy <span class="token operator">&lt;</span> lineminwitdh<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        git_span1 <span class="token operator">=</span> item<span class="token punctuation">.</span>date<span class="token punctuation">;</span>                        git_span2 <span class="token operator">=</span> item<span class="token punctuation">.</span>count<span class="token punctuation">;</span>                        git_x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">;</span>                        git_y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">;</span>                        html <span class="token operator">=</span> <span class="token function">tooltip_html</span><span class="token punctuation">(</span>git_x<span class="token punctuation">,</span> git_y<span class="token punctuation">,</span> git_span1<span class="token punctuation">,</span> git_span2<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">append_div_gitcalendar</span><span class="token punctuation">(</span>git_tooltip_container<span class="token punctuation">,</span> html<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">addlastmonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>git_thisdayindex <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            git_thisweekdatacore <span class="token operator">+=</span> git_firstdate<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>            git_amonthago <span class="token operator">=</span> git_firstdate<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span>date        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token number">49</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">thisweek2core</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            git_amonthago <span class="token operator">=</span> git_first2date<span class="token punctuation">[</span>git_thisdayindex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>date        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">thisweek2core</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> git_thisdayindex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> git_first2date<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_thisweekdatacore <span class="token operator">+=</span> git_first2date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>count        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">thisweekcore</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> item <span class="token keyword">of</span> git_data<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_thisweekdatacore <span class="token operator">+=</span> item<span class="token punctuation">.</span>count        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">addlastweek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> item <span class="token keyword">of</span> git_lastweek<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_weekdatacore <span class="token operator">+=</span> item<span class="token punctuation">.</span>count        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">addbeforeweek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> git_thisdayindex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> git_beforeweek<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_weekdatacore <span class="token operator">+=</span> git_beforeweek<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>count        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">addweek</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>git_thisdayindex <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_aweekago <span class="token operator">=</span> git_lastweek<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">;</span>            <span class="token function">addlastweek</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            lastweek <span class="token operator">=</span> data<span class="token punctuation">.</span>contributions<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            git_aweekago <span class="token operator">=</span> lastweek<span class="token punctuation">[</span>git_thisdayindex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">;</span>            <span class="token function">addlastweek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">addbeforeweek</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fetch</span><span class="token punctuation">(</span>git_githubapiurl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> data<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        git_data <span class="token operator">=</span> data<span class="token punctuation">.</span>contributions<span class="token punctuation">;</span>        git_total <span class="token operator">=</span> data<span class="token punctuation">.</span>total<span class="token punctuation">;</span>        git_first2date <span class="token operator">=</span> git_data<span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        git_firstdate <span class="token operator">=</span> git_data<span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        git_firstweek <span class="token operator">=</span> data<span class="token punctuation">.</span>contributions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        git_lastweek <span class="token operator">=</span> data<span class="token punctuation">.</span>contributions<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        git_beforeweek <span class="token operator">=</span> data<span class="token punctuation">.</span>contributions<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        git_thisdayindex <span class="token operator">=</span> git_lastweek<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        git_thisday <span class="token operator">=</span> git_lastweek<span class="token punctuation">[</span>git_thisdayindex<span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">;</span>        git_oneyearbeforeday <span class="token operator">=</span> git_firstweek<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>date<span class="token punctuation">;</span>        git_monthindex <span class="token operator">=</span> git_thisday<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">;</span>        git_montharrbefore <span class="token operator">=</span> git_month<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>git_monthindex<span class="token punctuation">,</span> <span class="token number">12</span> <span class="token operator">-</span> git_monthindex<span class="token punctuation">)</span><span class="token punctuation">;</span>        git_monthchange <span class="token operator">=</span> git_montharrbefore<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>git_month<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addweek</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addlastmonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token function">github_main_box</span><span class="token punctuation">(</span>git_monthchange<span class="token punctuation">,</span> git_data<span class="token punctuation">,</span> git_user<span class="token punctuation">,</span> git_color<span class="token punctuation">,</span> git_total<span class="token punctuation">,</span> git_thisweekdatacore<span class="token punctuation">,</span> git_weekdatacore<span class="token punctuation">,</span> git_oneyearbeforeday<span class="token punctuation">,</span> git_thisday<span class="token punctuation">,</span> git_aweekago<span class="token punctuation">,</span> git_amonthago<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">append_div_gitcalendar</span><span class="token punctuation">(</span>github_container<span class="token punctuation">,</span> html<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'github_loading'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'github_loading'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">responsiveChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function-variable function">onresize</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">responsiveChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function-variable function">onscroll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.gitmessage'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            git_tooltip_container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">""</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">git_thiscolor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">color<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> color<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> color<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">tooltip_html</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> span1<span class="token punctuation">,</span> span2</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;div class="gitmessage" style="top:'</span> <span class="token operator">+</span> y <span class="token operator">+</span> <span class="token string">'px;left:'</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">'px;position: fixed;z-index:9999">&lt;div class="angle-wrapper" style="display:block;">&lt;span>'</span> <span class="token operator">+</span> span1 <span class="token operator">+</span> <span class="token string">'&amp;nbsp;&lt;/span>&lt;span>'</span> <span class="token operator">+</span> span2 <span class="token operator">+</span> <span class="token string">' 次上传&lt;/span>&lt;/div>&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> html    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">github_canvas_box</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">'&lt;div id="gitcalendarcanvasbox"> &lt;canvas id="gitcanvas" style="animation: none;">&lt;/canvas>&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> html    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">github_info_box</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">user<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;div id="git_tooltip_container">&lt;/div>&lt;div class="contrib-footer clearfix mt-1 mx-3 px-3 pb-1">&lt;div class="float-left text-gray">数据来源 &lt;a href="https://github.com/'</span> <span class="token operator">+</span> user <span class="token operator">+</span> <span class="token string">'" target="blank">@'</span> <span class="token operator">+</span> user <span class="token operator">+</span> <span class="token string">'&lt;/a>&lt;/div>&lt;div class="contrib-legend text-gray">Less &lt;ul class="legend">&lt;li style="background-color:'</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'">&lt;/li>&lt;li style="background-color:'</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'">&lt;/li>&lt;li style="background-color:'</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'">&lt;/li>&lt;li style="background-color:'</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'">&lt;/li>&lt;li style="background-color:'</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'">&lt;/li>&lt;/ul>More &lt;/div>&lt;/div>'</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> html    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">github_main_box</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">monthchange<span class="token punctuation">,</span> git_data<span class="token punctuation">,</span> user<span class="token punctuation">,</span> color<span class="token punctuation">,</span> total<span class="token punctuation">,</span> thisweekdatacore<span class="token punctuation">,</span> weekdatacore<span class="token punctuation">,</span> oneyearbeforeday<span class="token punctuation">,</span> thisday<span class="token punctuation">,</span> aweekago<span class="token punctuation">,</span> amonthago</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> canvasbox <span class="token operator">=</span> <span class="token function">github_canvas_box</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> infobox <span class="token operator">=</span> <span class="token function">github_info_box</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> style <span class="token operator">=</span> <span class="token function">github_main_style</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;div class="position-relative">&lt;div class="border py-2 graph-before-activity-overview">&lt;div class="js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center">'</span> <span class="token operator">+</span> canvasbox <span class="token operator">+</span> <span class="token string">'&lt;/div>'</span> <span class="token operator">+</span> infobox <span class="token operator">+</span> <span class="token string">'&lt;/div>&lt;/div>'</span><span class="token punctuation">;</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;div style="display:flex;width:100%">&lt;div class="contrib-column contrib-column-first table-column">&lt;span class="text-muted">过去一年提交&lt;/span>&lt;span class="contrib-number">'</span> <span class="token operator">+</span> total <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;span class="text-muted">'</span> <span class="token operator">+</span> oneyearbeforeday <span class="token operator">+</span> <span class="token string">'&amp;nbsp;-&amp;nbsp;'</span> <span class="token operator">+</span> thisday <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;/div>&lt;div class="contrib-column table-column">&lt;span class="text-muted">最近一月提交&lt;/span>&lt;span class="contrib-number">'</span> <span class="token operator">+</span> thisweekdatacore <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;span class="text-muted">'</span> <span class="token operator">+</span> amonthago <span class="token operator">+</span> <span class="token string">'&amp;nbsp;-&amp;nbsp;'</span> <span class="token operator">+</span> thisday <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;/div>&lt;div class="contrib-column table-column">&lt;span class="text-muted">最近一周提交&lt;/span>&lt;span class="contrib-number">'</span> <span class="token operator">+</span> weekdatacore <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;span class="text-muted">'</span> <span class="token operator">+</span> aweekago <span class="token operator">+</span> <span class="token string">'&amp;nbsp;-&amp;nbsp;'</span> <span class="token operator">+</span> thisday <span class="token operator">+</span> <span class="token string">'&lt;/span>&lt;/div>&lt;/div>'</span> <span class="token operator">+</span> style<span class="token punctuation">;</span>        <span class="token keyword">return</span> html    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">github_main_style</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        style <span class="token operator">=</span> <span class="token string">'&lt;style>#github_container&#123;text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;&#125;.gitcalendar-graph text.wday,.gitcalendar-graph text.month&#123;font-size:10px;fill:#aaa;&#125;.contrib-legend&#123;text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;&#125;.contrib-legend .legend&#123;display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;&#125;.contrib-legend .legend li&#123;display:inline-block;width:10px;height:10px;&#125;.text-small&#123;font-size:12px;color:#767676;&#125;.gitcalendar-graph&#123;padding:15px 0 0;text-align:center;&#125;.contrib-column&#123;text-align:center;border-left:1px solid #ddd;border-top:1px solid #ddd;font-size:11px;&#125;.contrib-column-first&#123;border-left:0;&#125;.table-column&#123;padding:10px;display:table-cell;flex:1;vertical-align:top;&#125;.contrib-number&#123;font-weight:300;line-height:1.3em;font-size:24px;display:block;&#125;.gitcalendar img.spinner&#123;width:70px;margin-top:50px;min-height:70px;&#125;.monospace&#123;text-align:center;color:#000;font-family:monospace;&#125;.monospace a&#123;color:#1D75AB;text-decoration:none;&#125;.contrib-footer&#123;font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;&#125;.left.text-muted&#123;float:left;margin-left:9px;color:#767676;&#125;.left.text-muted a&#123;color:#4078c0;text-decoration:none;&#125;.left.text-muted a:hover,.monospace a:hover&#123;text-decoration:underline;&#125;h2.f4.text-normal.mb-3&#123;display:none;&#125;.float-left.text-gray&#123;float:left;&#125;#user-activity-overview&#123;display:none;&#125;.day-tooltip&#123;white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;&#125;.day-tooltip strong&#123;color:#dfe2e5;&#125;.day-tooltip.is-visible&#123;display:block;&#125;.day-tooltip:after&#123;position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:" ";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)&#125;.position-relative&#123;width:100%;&#125;@media screen and (max-width:650px)&#123;.contrib-column&#123;display:none&#125;&#125;.angle-wrapper&#123;z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;&#125;.angle-box&#123;position:fixed;padding:10px&#125;.angle-wrapper span&#123;padding-bottom:1em;&#125;.angle-wrapper:before&#123;content:"";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;&#125;&lt;/style>'</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> style    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">append_div_gitcalendar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> text <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> temp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        temp<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> text<span class="token punctuation">;</span>        <span class="token keyword">var</span> frag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            frag<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>frag<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">loading_git</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    loading <span class="token operator">=</span> <span class="token string">'&lt;div id="github_loading" style="height:100%;display: flex;align-items: center;justify-content: center;">&lt;svg style="height:50px;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"  viewBox="0 0 50 50" style="enable-background:new 0 0 50 50" xml:space="preserve">&lt;path fill="'</span> <span class="token operator">+</span> color <span class="token operator">+</span> <span class="token string">'" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z" transform="rotate(275.098 25 25)">&lt;animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite">&lt;/animateTransform>&lt;/path>&lt;/svg>&lt;/div>'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> loading<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> git_user <span class="token operator">=</span> <span class="token string">'&lt;username>'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> github_container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'github_container'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> github_loading <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'github_loading'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_purple <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'#ebedf0'</span><span class="token punctuation">,</span> <span class="token string">'#fdcdec'</span><span class="token punctuation">,</span> <span class="token string">'#fc9bd9'</span><span class="token punctuation">,</span> <span class="token string">'#fa6ac5'</span><span class="token punctuation">,</span> <span class="token string">'#f838b2'</span><span class="token punctuation">,</span> <span class="token string">'#f5089f'</span><span class="token punctuation">,</span> <span class="token string">'#c4067e'</span><span class="token punctuation">,</span> <span class="token string">'#92055e'</span><span class="token punctuation">,</span> <span class="token string">'#540336'</span><span class="token punctuation">,</span> <span class="token string">'#48022f'</span><span class="token punctuation">,</span> <span class="token string">'#30021f'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_green <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'#ebedf0'</span><span class="token punctuation">,</span> <span class="token string">'#f0fff4'</span><span class="token punctuation">,</span> <span class="token string">'#dcffe4'</span><span class="token punctuation">,</span> <span class="token string">'#bef5cb'</span><span class="token punctuation">,</span> <span class="token string">'#85e89d'</span><span class="token punctuation">,</span> <span class="token string">'#34d058'</span><span class="token punctuation">,</span> <span class="token string">'#28a745'</span><span class="token punctuation">,</span> <span class="token string">'#22863a'</span><span class="token punctuation">,</span> <span class="token string">'#176f2c'</span><span class="token punctuation">,</span> <span class="token string">'#165c26'</span><span class="token punctuation">,</span> <span class="token string">'#144620'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_blue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'#ebedf0'</span><span class="token punctuation">,</span> <span class="token string">'#f1f8ff'</span><span class="token punctuation">,</span> <span class="token string">'#dbedff'</span><span class="token punctuation">,</span> <span class="token string">'#c8e1ff'</span><span class="token punctuation">,</span> <span class="token string">'#79b8ff'</span><span class="token punctuation">,</span> <span class="token string">'#2188ff'</span><span class="token punctuation">,</span> <span class="token string">'#0366d6'</span><span class="token punctuation">,</span> <span class="token string">'#005cc5'</span><span class="token punctuation">,</span> <span class="token string">'#044289'</span><span class="token punctuation">,</span> <span class="token string">'#032f62'</span><span class="token punctuation">,</span> <span class="token string">'#05264c'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_pink <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'#ebedf0'</span><span class="token punctuation">,</span> <span class="token string">'#fdcdec'</span><span class="token punctuation">,</span> <span class="token string">'#fc9bd9'</span><span class="token punctuation">,</span> <span class="token string">'#fa6ac5'</span><span class="token punctuation">,</span> <span class="token string">'#f838b2'</span><span class="token punctuation">,</span> <span class="token string">'#f5089f'</span><span class="token punctuation">,</span> <span class="token string">'#c4067e'</span><span class="token punctuation">,</span> <span class="token string">'#92055e'</span><span class="token punctuation">,</span> <span class="token string">'#540336'</span><span class="token punctuation">,</span> <span class="token string">'#48022f'</span><span class="token punctuation">,</span> <span class="token string">'#30021f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> git_color <span class="token operator">=</span> git_purple<span class="token punctuation">;</span>    <span class="token function">append_div_gitcalendar</span><span class="token punctuation">(</span>github_container<span class="token punctuation">,</span> <span class="token function">loading_git</span><span class="token punctuation">(</span>git_color<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">github_canlendar</span><span class="token punctuation">(</span>git_user<span class="token punctuation">,</span> git_color<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码需要修改第269行的<code>&lt;username&gt;</code>为自己的GitHub用户名，第276行自定义Calendar颜色主题，以及第2行的<code>&lt;your-api&gt;</code>。</p><p>这里同样需要自建一个api来调用，且看下文。</p><p>在主题配置文件的<code>inject</code>的<code>head</code>或<code>bottom</code>配置下增加一条：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> &lt;script data<span class="token punctuation">-</span>pjax src="/js/githubcalendar.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如不需要适配pjax则将<code>data-pjax</code>去掉，如主题不支持在配置文件中<code>inject</code>则自行想办法将该js文件引入。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="自建GitHub-Calendar-API"><a href="#自建GitHub-Calendar-API" class="headerlink" title="自建GitHub Calendar API"></a>自建GitHub Calendar API</h2><p>为啥要自建？当然你完全可以用我的api，但毕竟如果用别人的服务，哪天服务崩了也会影响自己，所以反正这个建起来比较快，又是免费的，何乐而不为？</p><p>这个东西的原理说白了，其实就是将GitHub个人主页上显示的东西爬取下来，按一定格式发送到前端，由前端解析渲染，因此如果你有自己的公网服务器，可以直接在服务器上运行下面的代码并且开放到公网：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse<span class="token punctuation">,</span> parse_qs<span class="token keyword">from</span> http<span class="token punctuation">.</span>server <span class="token keyword">import</span> BaseHTTPRequestHandler<span class="token punctuation">,</span>HTTPServer<span class="token keyword">import</span> json<span class="token keyword">def</span> <span class="token function">list_split</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>items<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">getdata</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 2024-03-29 定义 headers 请求头</span>    <span class="token comment"># 请见 https://github.com/yuhengwei2001/python_github_calendar_api/commit/0f37cfc003f09e99a1892602d8bc2b38137899d2#diff-b014e93fcab9bae29f453d7a616da5eac2f02947f32d02a1a1bf200eeaab5a39L11</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'https://github.com/'</span><span class="token operator">+</span> name<span class="token punctuation">,</span>        <span class="token string">'Sec-Ch-Ua'</span><span class="token punctuation">:</span> <span class="token string">'"Chromium";v="122", "Not(A:Brand";v="24", "Microsoft Edge";v="122"'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Ch-Ua-Mobile'</span><span class="token punctuation">:</span> <span class="token string">'?0'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Ch-Ua-Platform'</span><span class="token punctuation">:</span> <span class="token string">'"Windows"'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Dest'</span><span class="token punctuation">:</span> <span class="token string">'empty'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Mode'</span><span class="token punctuation">:</span> <span class="token string">'cors'</span><span class="token punctuation">,</span>        <span class="token string">'Sec-Fetch-Site'</span><span class="token punctuation">:</span> <span class="token string">'same-origin'</span><span class="token punctuation">,</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0'</span><span class="token punctuation">,</span>        <span class="token string">'X-Requested-With'</span><span class="token punctuation">:</span> <span class="token string">'XMLHttpRequest'</span>    <span class="token punctuation">&#125;</span>    <span class="token comment"># 发送请求时添加 headers 请求头</span>    <span class="token comment"># gitpage = requests.get("https://github.com/" + name)</span>    gitpage <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://github.com/"</span> <span class="token operator">+</span> name  <span class="token operator">+</span> <span class="token string">"?action=show&amp;controller=profiles&amp;tab=contributions&amp;user_id="</span><span class="token operator">+</span> name<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    data <span class="token operator">=</span> gitpage<span class="token punctuation">.</span>text        <span class="token comment"># 2023-11-22 更新正则 https://github.com/Zfour/python_github_calendar_api/issues/18</span>    datadatereg <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'data-date="(.*?)" id="contribution-day-component'</span><span class="token punctuation">)</span>    datacountreg <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;tool-tip .*?class="sr-only position-absolute">(.*?) contribution'</span><span class="token punctuation">)</span>        datadate <span class="token operator">=</span> datadatereg<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    datacount <span class="token operator">=</span> datacountreg<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    datacount <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">"No"</span> <span class="token keyword">else</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> datacount<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 检查datadate和datacount是否为空</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> datadate <span class="token keyword">or</span> <span class="token keyword">not</span> datacount<span class="token punctuation">:</span>        <span class="token comment"># 处理空数据情况</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">"total"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"contributions"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>            <span class="token comment"># 将datadate和datacount按照字典序排序</span>    sorted_data <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>datadate<span class="token punctuation">,</span> datacount<span class="token punctuation">)</span><span class="token punctuation">)</span>    datadate<span class="token punctuation">,</span> datacount <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>sorted_data<span class="token punctuation">)</span>        contributions <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>datacount<span class="token punctuation">)</span>    datalist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>datadate<span class="token punctuation">)</span><span class="token punctuation">:</span>        itemlist <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"date"</span><span class="token punctuation">:</span> item<span class="token punctuation">,</span> <span class="token string">"count"</span><span class="token punctuation">:</span> datacount<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        datalist<span class="token punctuation">.</span>append<span class="token punctuation">(</span>itemlist<span class="token punctuation">)</span>    datalistsplit <span class="token operator">=</span> list_split<span class="token punctuation">(</span>datalist<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>    returndata <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"total"</span><span class="token punctuation">:</span> contributions<span class="token punctuation">,</span>        <span class="token string">"contributions"</span><span class="token punctuation">:</span> datalistsplit    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> returndata<span class="token keyword">class</span> <span class="token class-name">handler</span><span class="token punctuation">(</span>BaseHTTPRequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">do_GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        parsed_path <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">)</span>        query_params <span class="token operator">=</span> parse_qs<span class="token punctuation">(</span>parsed_path<span class="token punctuation">.</span>query<span class="token punctuation">)</span>        user <span class="token operator">=</span> query_params<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 获取'user'参数的值，如果不存在则默认为None</span>        data <span class="token operator">=</span> getdata<span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token keyword">if</span> user <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token string">"error"</span><span class="token punctuation">:</span> <span class="token string">"User parameter not provided"</span><span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>send_response<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>send_header<span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>send_header<span class="token punctuation">(</span><span class="token string">'Content-type'</span><span class="token punctuation">,</span> <span class="token string">'application/json'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>end_headers<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此代码通过<code>?user=</code>参数进行查询，这与前面通过插件安装的方法有所不同，插件是直接把用户名作为查询参数的：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> git_githubapiurl <span class="token operator">=</span> <span class="token string">"https://python-github-calendar-api.vercel.app/api?"</span> <span class="token operator">+</span> git_user<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果前面通过插件安装，则需要注意修改接口代码或修改插件查询参数格式。</p><hr><p>然而并不想为了运行这个玩意在服务器上开一个进程，那么我们还可以利用vercel这种平台来很方便地部署。</p><p>首先，显然需要注册一个vercel账号，然后选择Add New-&gt;Project，选择”Import Third-Party Git Repository →”，在其中粘贴以下链接：</p><p><code>https://github.com/Zfour/python_github_calendar_api</code></p><p>或直接粘贴我的：<code>https://github.com/windshadow233/python_github_calendar_api</code></p><p>然后vercel会让你创建一个存储库，随便命名即可（可以同样命名为python_github_calendar_api），公开或私有皆可。接下来等待vercel部署成功。</p><p>不过这里有一个小坑，直接一路啥都不改部署下来的服务，无论怎么查询都返回500，Google了半天发现似乎是Node版本的锅，在vercel项目的Settings里面将Node的版本从20.x降为18.x并重新部署，即可解决问题。</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/3c725d61-6493-4683-97de-f58dd42271c7.png" alt="image-20240510034642117"></p><p>由于vercel的域名已经被污染了，这里我们可以绑定一个自己的域名。</p><p>前往Settings-&gt;Domains，添加自己的域名，然后将该域名的CNAME解析到<code>cname.vercel-dns.com</code>即可。</p><p>在浏览器中访问<code>https://&lt;your-domain&gt;/api?user=&lt;username&gt;</code>，如果服务正常，则可以获取到数据。</p><hr><p>最后在前面的文件中修改api链接。</p><div class="tabs" id="tab2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab2-1">插件安装</button><button type="button" class="tab " data-href="tab2-2">魔改安装</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab2-1"><p>修改前面网站配置文件里的<code>githubcalendar.api</code>参数。</p></div><div class="tab-item-content" id="tab2-2"><p>修改前面js文件里的<code>git_githubapiurl</code>参数。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>最后的最后，Hexo一键三连即可！</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/javascript/">JavaScript</category>
      
      <category domain="https://blog.fyz666.xyz/tags/web%E5%89%8D%E7%AB%AF/">Web前端</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo%E6%8F%92%E4%BB%B6/">Hexo插件</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11354/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用GitHub Actions自动部署Hexo博客</title>
      <link>https://blog.fyz666.xyz/blog/11277/</link>
      <guid>https://blog.fyz666.xyz/blog/11277/</guid>
      <pubDate>Sun, 05 May 2024 17:51:57 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;为了更好地备份我的博客，我将其源码推送到了一个GitHub仓库。之前了解过一点GitHub</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>为了更好地备份我的博客，我将其源码推送到了一个GitHub仓库。之前了解过一点GitHub Actions，遂想着通过这个东西来自动部署博客。</p><p>随着博客的内容越来越多，本地编译的速度会越来越慢，况且我还使用了一些<code>gulp</code>插件，运行非常耗时，这个时候，把编译、部署的工作交给GitHub Actions就是一件非常舒服的事。另一方面，我以前没怎么用过这个功能，正好借此机会熟悉一下GitHub Actions的编写。</p><hr><p>我的博客之前都是运行在云服务器上，而众所周知，GitHub提供了免费的静态页面托管服务——GitHub Pages。既然我已经把博客迁移到了静态站，那么现在不仅可以选择部署上服务器，还多了一个选择：将博客部署到仓库的GitHub Pages下。</p><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">部署到云服务器</button><button type="button" class="tab " data-href="tab1-2">部署到GitHub Pages</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p><strong>设置环境变量</strong></p><p>创建一个SSH密钥，用于此仓库连接服务器。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">"git@github.com:windshadow233/windshadow233.github.io.git"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里，<code>windshadow233.github.io</code>是我的仓库名。</p><p>将此公钥上传到服务器，并将私钥粘贴到仓库的secrets下，命名为<code>SSH_PRIVATE_KEY</code>：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/e9a7e48a-471f-4b85-b8bd-0b437a9d35da.png" alt="image-20240505194134676"></p><p>创建变量<code>SERVER_IP</code>，值为服务器的ip地址：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/98e9e6d6-e95f-4e71-9423-35bf5a289fce.png" alt="image-20240505194228194"></p><p><strong>创建workflow文件</strong></p><p>在仓库根目录创建目录：<code>.github/workflows/</code>，然后在该目录下创建文件：<code>deploy.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy Site<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> main    <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'source/**'</span>      <span class="token punctuation">-</span> <span class="token string">'themes/**'</span>      <span class="token punctuation">-</span> <span class="token string">'_config.yml'</span>      <span class="token punctuation">-</span> <span class="token string">'_config.butterfly.yml'</span>  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Node      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v4      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">'21.7.1'</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache Node modules      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v4      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules        <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>node<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> hashFiles('<span class="token important">**/package-lock.json')</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">restore-keys</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          $&#123;&#123; runner.os &#125;&#125;-node-</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install Dependencies      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Generate Static Files      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run b    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up SSH key      <span class="token key atrule">uses</span><span class="token punctuation">:</span> webfactory/ssh<span class="token punctuation">-</span>agent@v0.9.0      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">ssh-private-key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.SSH_PRIVATE_KEY <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy with Rsync      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">        ssh-keyscan -p 22 -H $&#123;&#123; vars.SERVER_IP &#125;&#125; >> ~/.ssh/known_hosts        rsync -avz --delete -e "ssh -p 22" ./public/ root@$&#123;&#123; vars.SERVER_IP &#125;&#125;:/var/www/blog/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>npm run b</code>是我定义在<code>package.json</code>文件中的命令。上述文件表示在检测到<code>main</code>分支的<code>source/,themes/</code>目录以及配置文件的发生变更时，自动触发GitHub Actions。</p></div><div class="tab-item-content" id="tab1-2"><div class="note info simple"><p>需要在GitHub中创建一个用于操作repo的token。</p></div><p><strong>创建workflow文件</strong></p><p>在仓库根目录创建目录：<code>.github/workflows/</code>，然后在该目录下创建文件：<code>deploy.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy Site<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> main    <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'source/**'</span>      <span class="token punctuation">-</span> <span class="token string">'themes/**'</span>      <span class="token punctuation">-</span> <span class="token string">'_config.yml'</span>      <span class="token punctuation">-</span> <span class="token string">'_config.butterfly.yml'</span>  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span><span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Node      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v4      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">'21.7.1'</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache Node modules      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v4      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> node_modules        <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> runner.os <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">-</span>node<span class="token punctuation">-</span>$<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> hashFiles('<span class="token important">**/package-lock.json')</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">restore-keys</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          $&#123;&#123; runner.os &#125;&#125;-node-</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install Dependencies      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Generate Static Files      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run b    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to gh<span class="token punctuation">-</span>pages      <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@v4      <span class="token key atrule">with</span><span class="token punctuation">:</span>        <span class="token key atrule">token</span><span class="token punctuation">:</span> $<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> secrets.GITHUB_TOKEN <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token key atrule">branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages        <span class="token key atrule">folder</span><span class="token punctuation">:</span> public<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>前往仓库的Settings-&gt;Actions-&gt;General，将Actions对仓库的操作权限提升为“读写”：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/6d441bba-e632-445f-93b7-59fbd4ac3fcc.png" alt="image-20240511212745256"></p><p>gh-pages分支生成后，前往仓库的Settings-&gt;Pages，选择Deploy from a branch：gh-pages</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/58deb7b3-7cb4-4dcf-aeb0-949faf67db58.png" alt="image-20240511212922999"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>自此，GitHub Actions配置完成，现在push到此仓库的main分支时就会自动触发Hexo的部署流程。</p><p>当然，也可以在workflow里将上面两种部署方法全部写上，相当于博客的多个镜像站，也是非常不错的选择，另外，将gh-pages分支绑定到一些静态服务托管平台（例如Vercel），可以实现多镜像站同步的效果。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      <category domain="https://blog.fyz666.xyz/tags/github/">GitHub</category>
      
      <category domain="https://blog.fyz666.xyz/tags/github-actions/">GitHub Actions</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11277/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>高自由度地管理Hexo博客的文章本地路径</title>
      <link>https://blog.fyz666.xyz/blog/11229/</link>
      <guid>https://blog.fyz666.xyz/blog/11229/</guid>
      <pubDate>Sat, 27 Apr 2024 02:01:57 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;Hexo默认将所有的文章都放在&lt;code&gt;source/_posts&lt;/code&gt;这一级目录下，一旦文章多起来，就很乱七八糟。因此，往往会选择将文章分在不同的子目录下，以方便我们对它们进行管理。最常见的配置方法就是按文章创建的时间分配目录。&lt;/p&gt;
&lt;div</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>Hexo默认将所有的文章都放在<code>source/_posts</code>这一级目录下，一旦文章多起来，就很乱七八糟。因此，往往会选择将文章分在不同的子目录下，以方便我们对它们进行管理。最常见的配置方法就是按文章创建的时间分配目录。</p><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">修改Hexo的配置文件</button><button type="button" class="tab " data-href="tab1-2">自己写脚本实现</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p><code>_config.yml</code>文件提供了一个配置项：<code>new_post_name</code>，可以用来定义文章的路径，将其值设置为<code>:year/:month/:title.md</code>即可。</p></div><div class="tab-item-content" id="tab1-2"><p>如果对文章路径有其他更个性化的需求，通过改配置文件的方法就显得不那么自由了，这一需求也可以通过编写脚本实现。</p><p>Hexo定义了一个处理文章路径的过滤器：<a href="https://hexo.io/zh-cn/api/filter#new-post-path">new_post_path</a>，可以通过对其注册一个函数来实现对文章本地路径的修改。与<a href="/blog/11219/">上篇文章</a>类似，我们在根目录的<code>scripts</code>目录下创建一个新的文件：<code>modify-post-path.js</code>，内容如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'new_post_path'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filePath<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> filePath<span class="token punctuation">;</span>  <span class="token keyword">var</span> filename <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> dirname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> month <span class="token operator">=</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> newPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dirname<span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> newPath<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该函数首先忽略了所有<code>page</code>，只对<code>post</code>页面进行处理，接下来的内容就不说了，非常容易理解。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><hr><p>由于我已设置了<code>permalink: /blog/:id/</code>，因此改变文件的路径不会影响对应文章在网页中的URL。</p><p>最后，根据我自己的需求，我需要修改一下<a href="/blog/11219/">上篇文章</a>中提到的自动生成唯一自增ID的函数。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fm <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo-front-matter'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> postsDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>post<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>postsDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> years <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>postsDir<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> year <span class="token keyword">of</span> years<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> months <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>postsDir<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> month <span class="token keyword">of</span> months<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>postsDir<span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> postFiles <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> file<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.md'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> file <span class="token operator">!==</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>postFiles<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> maxId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        postFiles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> content <span class="token operator">=</span> fm<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>postsDir<span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> content<span class="token punctuation">.</span>id <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            maxId <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxId<span class="token punctuation">,</span> content<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        content <span class="token operator">=</span> fm<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>        content<span class="token punctuation">.</span>id <span class="token operator">=</span> maxId <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>post<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>content<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">'---\n'</span> <span class="token operator">+</span> fm<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于已经将文章按时间归类了，而文章的<code>id</code>又是自增的，因此只需要找到最新的月份目录即可确定当前的最大<code>id</code>。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11229/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>为Hexo文章自动生成唯一的自增ID</title>
      <link>https://blog.fyz666.xyz/blog/11219/</link>
      <guid>https://blog.fyz666.xyz/blog/11219/</guid>
      <pubDate>Thu, 25 Apr 2024 18:37:04 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p><a href="/blog/11025/">前文</a>曾提到过我将博客从WordPress迁移到Hexo时，希望保留原有的永久链接格式：<code>/blog/:id/</code>，然而Hexo本身并不支持自动生成这样的<code>id</code>，虽然有一些插件例如<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>支持生成这种数字<code>id</code>，但好像也不是我想要的样子。</p><p>我仍希望保持之前那种WordPress下的格式，即每篇文章的<code>id</code>单调递增，且每次的递增值比较“随机”（这个自增在WordPress中是MySQL数据库的行为，MySQL会为<code>wp_post</code>表中的所有内容分配<code>id</code>，而这些内容不仅包含了已发布的文章，还包含文章中插入的图片、文章的修订版本以及文章的自动保存版本等等，因此在发布文章时，往往这个新文章的<code>id</code>会看上去比较随机地递增）。</p><p>而现在Hexo没有数据库了，但我仍想保持这种随机增长的文章<code>id</code>风格。那要怎么办呢？每次手动算<code>id</code>自然不太方便，不妨自己来写个插件。</p><hr><p>通过阅读<a href="https://hexo.io/zh-cn/api/events">Hexo的文档</a>，我简单了解了一下如何在Hexo中监听事件，例如在“生成新文章后”触发一些自定义的函数。首先在博客的根目录下（这里的根目录是项目的根目录，即包含了博客配置文件的目录）创建<code>scripts</code>文件夹，然后在下面创建的<code>javascript</code>文件会自动被Hexo读取执行。</p><p>先安装一个包：<code>fs-extra</code>，是<code>fs</code>模块的扩展。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> fs-extra <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我安装的版本：<code>&quot;fs-extra&quot;: &quot;^11.2.0&quot;</code></p><p>在<code>scripts</code>目录下创建一个<code>auto-id.js</code>：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs-extra'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fm <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'hexo-front-matter'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>post<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> maxId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>    files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">fpath</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>fpath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.md'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> content <span class="token operator">=</span> fm<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'source'</span><span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">,</span> fpath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> content<span class="token punctuation">.</span>id <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          maxId <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxId<span class="token punctuation">,</span> content<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    content <span class="token operator">=</span> fm<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    content<span class="token punctuation">.</span>id <span class="token operator">=</span> maxId <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>post<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>content<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">'---\n'</span> <span class="token operator">+</span> fm<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后遍历一遍文章，取出当前最大的<code>id</code>（这个操作有点蠢，不过暂且这样吧，懒得用其他方式去做持久化），然后在此基础上加一个随机值，就得到了新的<code>id</code>，最后将它写入到新文章的<code>front-matter</code>中。不过不知道为什么最后得手动在最前面添加<code>---\n</code>，试了一下<code>fm.stringify</code>的参数<code>prefixSeparator</code>也并没有啥用。</p><p>这样就相当于写了一个非常简单的插件了，这个插件可以为文章自动生成一个<code>id</code>，效果如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">╰─➤  npx hexo new post <span class="token string">"为Hexo文章自动生成唯一的自增ID"</span>INFO  Validating configINFO  <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>      <span class="token comment">#####  #    # ##### ##### ###### #####  ###### #      #   #</span>      <span class="token comment">#    # #    #   #     #   #      #    # #      #       # #</span>      <span class="token comment">#####  #    #   #     #   #####  #    # #####  #        #</span>      <span class="token comment">#    # #    #   #     #   #      #####  #      #        #</span>      <span class="token comment">#    # #    #   #     #   #      #   #  #      #        #</span>      <span class="token comment">#####   ####    #     #   ###### #    # #      ######   #</span>                            <span class="token number">4.14</span>.0-b1  <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>INFO  Created: ~/<span class="token punctuation">..</span>./source/_posts/为Hexo文章自动生成唯一的自增ID.md<span class="token punctuation">..</span>./source/_posts/为Hexo文章自动生成唯一的自增ID.md -<span class="token operator">></span> <span class="token number">11219</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      <category domain="https://blog.fyz666.xyz/categories/hexo%E9%AD%94%E6%94%B9/">Hexo魔改</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11219/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>gulp-clean-css插件优化时的bug及解决方案</title>
      <link>https://blog.fyz666.xyz/blog/11197/</link>
      <guid>https://blog.fyz666.xyz/blog/11197/</guid>
      <pubDate>Thu, 18 Apr 2024 18:13:10 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;a href=&quot;/blog/11084/&quot;&gt;之前的文章&lt;/a&gt;提到我为了控制静态文件版本使用了一个叫Gulp的包，同时为了压缩css文件大小，在其中使用了一个名为&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p><a href="/blog/11084/">之前的文章</a>提到我为了控制静态文件版本使用了一个叫Gulp的包，同时为了压缩css文件大小，在其中使用了一个名为<a href="https://github.com/scniro/gulp-clean-css">gulp-clean-css</a>的插件，不过这个插件存在一个<del>比较严重</del>其实也不是很严重的bug。</p><hr><p>一次，我魔改完主题样式，在本地测试效果良好的前提下，啪啪一顿执行<code>npm run b &amp;&amp; npm run d</code>将其部署上服务器，结果从手机上打开网站一看，发现菜单样式完全崩坏，与本地测试时看到的样子截然不同。</p><p>花了几分钟定位问题，发现优化完的css文件中有一些奇怪的东西：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.menus_item_child li:not(#sidebar-menusli)</span><span class="token punctuation">&#123;</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>显然该样式本来应该是这样的：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.menus_item_child li:not(#sidebar-menus li)</span><span class="token punctuation">&#123;</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>插件将<code>:not</code>选择器里的空格优化掉了。在<code>clean-css</code>的GitHub issues下面，果然找到了多条相关的bug，例如：</p><p><a href="https://github.com/clean-css/clean-css/issues/996">Spaces removed from :not statement</a></p><p><a href="https://github.com/clean-css/clean-css/issues/1175">Issue with minifying not pseudo-class alongside using selector inside it</a></p><p>第一条issue下面，项目的维护者回复:</p><blockquote><p>Fixed in <code>e651f24</code></p></blockquote><p>第二条则有其他用户的评论:</p><blockquote><p>I tested the version <code>5.1.3</code> and this issue is fixed in this version.</p></blockquote><p>于是，只要将gulp-clean-css插件依赖的clean-css版本修改到<code>5.1.3</code>，应该就可以解决问题。</p><p>然而直接改<code>package.json</code>应该不太行，于是我又找到了一条<a href="https://github.com/scniro/gulp-clean-css/issues/91">相关的issue</a>，下面有人评论：</p><blockquote><p>Here’s a fork that appears better maintained <a href="https://github.com/aptuitiv/gulp-clean-css">https://github.com/aptuitiv/gulp-clean-css</a></p></blockquote><p>火速卸载<code>gulp-clean-css</code>，再安装<code>@aptuitiv/gulp-clean-css</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall gulp-clean-css <span class="token parameter variable">--save</span><span class="token function">npm</span> <span class="token function">install</span> @aptuitiv/gulp-clean-css <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再将之前的<code>gulpfile.js</code>修改一下:</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">@@ -1,5 +1,5 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const gulp = require('gulp');</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const cleancss = require('gulp-clean-css');</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const cleancss = require('@aptuitiv/gulp-clean-css');</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const uglify = require('gulp-uglify-es').default;</span><span class="token prefix unchanged"> </span><span class="token line">const htmlmin = require('gulp-html-minifier-terser');</span><span class="token prefix unchanged"> </span><span class="token line">const rev = require('gulp-rev-all');</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>即可修复这个bug。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/debug/">Debug</category>
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/web%E5%89%8D%E7%AB%AF/">Web前端</category>
      
      <category domain="https://blog.fyz666.xyz/tags/npm/">npm</category>
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/gulp/">Gulp</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11197/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>利用GitHub做对象存储服务</title>
      <link>https://blog.fyz666.xyz/blog/11170/</link>
      <guid>https://blog.fyz666.xyz/blog/11170/</guid>
      <pubDate>Wed, 17 Apr 2024 11:27:24 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;我的blog上有很多图片，它们不仅分布于文章内容、文章封面，还会大量出现在相册里。&lt;/p&gt;
&lt;p&gt;把所有的图片都存在Hexo目录下虽然方便，但博客目录会十分臃肿，并且会拖慢Hexo生成public目录的速度，另外，如果使用了GitHub</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>我的blog上有很多图片，它们不仅分布于文章内容、文章封面，还会大量出现在相册里。</p><p>把所有的图片都存在Hexo目录下虽然方便，但博客目录会十分臃肿，并且会拖慢Hexo生成public目录的速度，另外，如果使用了GitHub Pages等静态服务部署博客，每次推送部署都要把一堆图片打包过去，影响部署速度（或许能增量部署？不过我没有尝试过）。总之——当图片数量很多时，使用对象存储服务是有必要的。</p><p>对比了各种对象存储服务商，我觉得我还是把GitHub利用起来吧，至少它免费、稳定、没有跑路风险。</p><p>不过仍有需要注意的地方⚠️</p><div class="note warning simple"><ul><li>GitHub原则上是反对仓库图床化的，当仓库超过 1G 后会有人工审核仓库内容，因此需要注意仓库不要太大。</li><li>jsDelivr 加速的单文件大小限制为 50M。</li></ul></div><p>基于上述原因，后续我会逐步将图片迁移到更加合适的对象存储平台。</p><div class="note info simple"><p>更新于2024-05-17：将所有图片迁移至<a href="https://oss-console.fyz666.xyz/">自建对象存储服务</a>。</p></div><hr><p>已有一些支持GitHub图床的软件：<a href="https://github.com/XPoet/picx">PicX</a>、<a href="https://github.com/PicGo/PicGo-Core">PicGo</a>，不过这些软件默认只能上传图片文件，没法传其他格式的文件。既然GitHub支持API管理仓库，那为什么不直接写个脚本来处理文件上传这件事呢？这样基本上任何需求都可以通过简单写几句代码实现，拥有更高的自由度，岂不美哉。</p><a class="tag-Link" target="_blank" href="https://docs.github.com/en/rest/using-the-rest-api/getting-started-with-the-rest-api">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/docs.github.com/en/rest/using-the-rest-api/getting-started-with-the-rest-api.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">GitHub API文档</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>我的需求是将文件按后缀名分类，存储在对应的目录下，并且将文件重命名为它自身的md5摘要，这样肯定不会遇到collision吧（大概！），并且用<a href="https://www.jsdelivr.com/">jsDelivr</a>进行加速。这里我就直接贴代码了：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> retry<span class="token keyword">def</span> <span class="token function">md5</span><span class="token punctuation">(</span>file_content<span class="token punctuation">)</span><span class="token punctuation">:</span>    hash_md5 <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>    hash_md5<span class="token punctuation">.</span>update<span class="token punctuation">(</span>file_content<span class="token punctuation">)</span>    <span class="token keyword">return</span> hash_md5<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">GitHubStorage</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">,</span> repo<span class="token punctuation">,</span> token<span class="token punctuation">,</span> branch<span class="token operator">=</span><span class="token string">'main'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username        self<span class="token punctuation">.</span>repo <span class="token operator">=</span> repo        self<span class="token punctuation">.</span>token <span class="token operator">=</span> token        self<span class="token punctuation">.</span>branch <span class="token operator">=</span> branch        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'Authorization'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f'token </span><span class="token interpolation"><span class="token punctuation">&#123;</span>token<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>            <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'application/vnd.github.v3+json'</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>        self<span class="token punctuation">.</span>cdn <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://fastly.jsdelivr.net/gh/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>username<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>repo<span class="token punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">&#123;</span>branch<span class="token punctuation">&#125;</span></span><span class="token string">/'</span></span>            <span class="token keyword">def</span> <span class="token function">get_file_info</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>            content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        ext <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        hash_md5 <span class="token operator">=</span> md5<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        file_name <span class="token operator">=</span> hash_md5 <span class="token operator">+</span> ext        path <span class="token operator">=</span> <span class="token string">'blank'</span> <span class="token keyword">if</span> ext <span class="token operator">==</span> <span class="token string">''</span> <span class="token keyword">else</span> ext<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> file_name    <span class="token decorator annotation punctuation">@retry<span class="token punctuation">.</span>retry</span><span class="token punctuation">(</span>tries<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>        content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> file_name <span class="token operator">=</span> self<span class="token punctuation">.</span>get_file_info<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>        api_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://api.github.com/repos/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>username<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>repo<span class="token punctuation">&#125;</span></span><span class="token string">/contents/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>file_name<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'Upload new file'</span><span class="token punctuation">,</span>            <span class="token string">'content'</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'branch'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>branch        <span class="token punctuation">&#125;</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span>api_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> json<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>cdn <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>file_name<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述脚本可以配合<code>typora</code>进行使用，实现markdown粘贴图片自动上传：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/7d451b93-9309-455f-80bc-ea36a6bf2154.png" alt=""></p><p>顺便可以在脚本里加一句<code>os.remove()</code>，以删除<code>typora</code>自动在本地保存的图片。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/python/">Python</category>
      
      <category domain="https://blog.fyz666.xyz/tags/github-api/">GitHub API</category>
      
      <category domain="https://blog.fyz666.xyz/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/">对象存储</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11170/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用Gulp解决Hexo静态站的文件缓存问题</title>
      <link>https://blog.fyz666.xyz/blog/11084/</link>
      <guid>https://blog.fyz666.xyz/blog/11084/</guid>
      <pubDate>Fri, 12 Apr 2024 21:50:06 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;作为一个喜欢魔改网站主题的人，在将博客迁移到静态站后，首先需要解决的便是浏览器的缓存问题。浏览器在遇到对静态资源的请求时，通常会采取两种缓存策略，分别是&lt;strong&gt;强制缓存&lt;/strong&gt;和&lt;strong&gt;协商缓存&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强制缓</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>作为一个喜欢魔改网站主题的人，在将博客迁移到静态站后，首先需要解决的便是浏览器的缓存问题。浏览器在遇到对静态资源的请求时，通常会采取两种缓存策略，分别是<strong>强制缓存</strong>和<strong>协商缓存</strong>。</p><ul><li>强制缓存：在一定时间（由服务器给出的请求头标识）内不再向服务器发出请求，而是直接使用缓存的内容。</li><li>协商缓存：与服务器协商是否需要重新请求。</li></ul><p>显然，由于缓存策略的存在，当服务端的静态文件发生变更后，客户端经常不会立刻加载最新版本的文件。对于这一点，之前我在动态博客中的解决方案是手动为静态文件加一个版本号，例如<code>theme.css?v=1.2.1</code>。不过在Hexo中所有的html页面都是自动编译生成的，而且会产生一大堆页面，因此并不可能一个一个地手动为静态文件添加版本。</p><p>经过一番搜索，我在一条<a href="https://github.com/hexojs/hexo/issues/3042#issuecomment-369648375">GitHub issue</a>下面找到了一个看上去不错的方案：</p><blockquote><p>directly use webpack or gulp (commend to install at root folder). first, hexo generate the publish files, then webpack or gulp revision the files.</p></blockquote><p>不过我先前几乎没有这些前端工作流的经验，因此花了半天时间才大概搞明白这句话的含义并让这个方案work。</p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>Gulp是一个强大的前端自动化构建工具，其有很多插件，能够满足许多需求，为文件名添加hash只是其中一个插件的功能，还有一些插件可以用来优化文件大小，这里就顺带一并装上。</p><p>先全局安装gulp，并安装一些用于优化静态文件的插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp <span class="token parameter variable">--global</span><span class="token function">npm</span> <span class="token function">install</span> gulp gulp-clean-css gulp-uglify-es gulp-html-minifier-terser<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后安装一个可以为静态文件打版本tag的插件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp-rev-all <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的问题是，默认的gulp-rev-all版本是4，并不支持通过旧规范的<code>require</code>语句导入，因此我手动降了一下版本，将package.json里的大版本号改到了3，这里我使用的版本信息如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">...  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"gulp"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-clean-css"</span><span class="token operator">:</span> <span class="token string">"^4.3.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-html-minifier-terser"</span><span class="token operator">:</span> <span class="token string">"^7.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-rev-all"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"gulp-uglify-es"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span>    ...  <span class="token punctuation">&#125;</span>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>做了版本号调整后，再重新安装，这样便能通过旧的语法进行导入了。</p><h2 id="编写gulpfile-js文件"><a href="#编写gulpfile-js文件" class="headerlink" title="编写gulpfile.js文件"></a>编写gulpfile.js文件</h2><p>在博客项目的根目录下创建gulpfile.js，内容如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-clean-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify-es'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span><span class="token keyword">const</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-html-minifier-terser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> RevAll <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-rev-all'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">)</span>           <span class="token comment">// 处理public目录下所有的css文件，下同</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">compatibility</span><span class="token operator">:</span> <span class="token string">'ie8'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 兼容到IE8</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                 <span class="token comment">// 移除注释</span>            <span class="token literal-property property">removeEmptyAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          <span class="token comment">// 移除值为空的参数</span>            <span class="token literal-property property">removeRedundantAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 移除值跟默认值匹配的属性</span>            <span class="token literal-property property">collapseBooleanAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 省略布尔属性的值</span>            <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             <span class="token comment">// 移除空格和空行</span>            <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                      <span class="token comment">// 压缩HTML中的CSS</span>            <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                       <span class="token comment">// 压缩HTML中的JS</span>            <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span>                      <span class="token comment">// 压缩HTML中的链接</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'rev'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'public/**/*.&#123;css,js,html&#125;'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>RevAll<span class="token punctuation">.</span><span class="token function">revision</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">dontRenameFile</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.html'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token literal-property property">dontUpdateReference</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.html'</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>RevAll<span class="token punctuation">.</span><span class="token function">manifestFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span>    <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token string">'rev'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该文件首先定义了四个任务，前三个任务分别优化css、js、html文件的大小，第四个任务用来为css、js的文件名添加hash值标签，默认生成8位的hash值，同时处理所有html，将其中对本地css、js文件的引用处修改为带hash标签的。</p><p>最后定义了一个默认任务，用以在执行<code>gulp</code>命令而不带任何参数时自动执行前面四个任务。</p><h2 id="配置npm脚本"><a href="#配置npm脚本" class="headerlink" title="配置npm脚本"></a>配置npm脚本</h2><p>在package.json中添加<code>scripts</code>字段，配置脚本：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">...  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"b"</span><span class="token operator">:</span> <span class="token string">"npx hexo clean &amp;&amp; npx hexo g &amp;&amp; gulp"</span><span class="token punctuation">,</span>    ...  <span class="token punctuation">&#125;</span>...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样只要在项目的根目录下执行<code>npm run b</code>，就可以直接完成编译+优化+添加版本一条龙。</p><hr><p>最近发现有个奇怪的bug，我只要用了<code>gulp-html-minifier-terser</code>，就会有一个html文件被”优化”成了空文件，研究了下发现原来不应该将最后的<code>rev</code>任务和前面三个并行起来，改成下面这样就好了:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>    gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token string">'minify-html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'rev'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/web%E5%89%8D%E7%AB%AF/">Web前端</category>
      
      <category domain="https://blog.fyz666.xyz/tags/npm/">npm</category>
      
      <category domain="https://blog.fyz666.xyz/tags/nodejs/">NodeJS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/gulp/">Gulp</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11084/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>迁移WordPress到静态博客</title>
      <link>https://blog.fyz666.xyz/blog/11025/</link>
      <guid>https://blog.fyz666.xyz/blog/11025/</guid>
      <pubDate>Thu, 11 Apr 2024 12:43:00 GMT</pubDate>
      
      <description>时隔四年，我终于把博客从WordPress迁移到了Hexo</description>
      
      
      
      <content:encoded><![CDATA[<p>用WordPress写个人博客四年后，我终于下定决心把它迁移到了静态博客。本文是我使用Hexo框架写的第一篇文章。</p><hr><h2 id="迁移的动机"><a href="#迁移的动机" class="headerlink" title="迁移的动机"></a>迁移的动机</h2><ul><li>MySQL数据库占用的内存实在是太多了</li><li>有后台的博客虽然管理起来方便，但十分臃肿，而且会有补不完的漏洞</li><li>用Markdown来写文章十分简约，同时也很方便</li><li>比起PHP，我更愿意学习前端那一套框架</li><li>正好前段时间研究了如何将文章转成Markdown，满足了迁移的前置条件</li><li><del>发现大佬们似乎都是静态博客，跟个风</del></li></ul><h2 id="迁移的过程"><a href="#迁移的过程" class="headerlink" title="迁移的过程"></a>迁移的过程</h2><p>WordPress和Hexo对文章的处理有非常大的区别，因此我在这里将我主要遇到的问题、需要满足的需求及解决方法记录了一下。</p><h3 id="将全站文章导出为Markdown"><a href="#将全站文章导出为Markdown" class="headerlink" title="将全站文章导出为Markdown"></a>将全站文章导出为Markdown</h3><p>由于Hexo使用Markdown来写文章，因此必不可少的操作——将所有文章导出为Markdown格式。</p><p>事实上，目前已经有不少<strong>WordPress to Hexo</strong>的迁移工具了，然而这些工具基本都很难完全满足我的需求，我需要一种可高度自定义的迁移方法来应对我的一些奇奇怪怪的需求。</p><p>如<a href="/blog/10094/">上一篇文章</a>所述，我已经找到了一种令我比较满意的转换方法，不过当时的目的只是随意转换一下，看着舒服就行，在实际进行迁移操作时，又根据需求增加了不少细节。</p><ul><li>保持文章的<code>permalink</code>不变</li></ul><p>我之前的博客中文章的永久链接都是<code>/blog/id/</code>这种形式，我希望在新的博客下保持原有的永久链接格式。基于此需求，我为所有导出的文章自定义了front-matter，增加了<code>id</code>字段，并且在Hexo配置文件中设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink</span><span class="token punctuation">:</span> /blog/<span class="token punctuation">:</span>id/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>下载所有静态文件到本地（以后再考虑使用第三方对象存储服务）</li></ul><p>我的博客中静态文件除掉css、js等文件以外，还包含图片、音频、pdf，甚至zip压缩包，并且它们在我原来网站上的路径可能非常复杂，例如<code>/wp-content/uploads/2021/06/xxx.jpeg</code>，对于这些文件，我自然不希望它们保留原始路径（早知道以前就用第三方对象存储服务了。。。这样就能省事好多），这里可以开启Hexo的post asset folder功能：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后创建与post文件同路径、同名的目录，将每篇文章包含的静态文件下载到对应的asset目录下。</p><p>之后只需要正则匹配所有长得像文件的链接：</p><pre class="line-numbers language-none"><code class="language-none">https\:\&#x2F;\&#x2F;blog\.fyz666\.xyz\&#x2F;[a-zA-Z\d\&#x2F;_-]*\.[a-zA-Z\d_%@#-]+(?:\.[a-zA-Z\d_%@#-]+)*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>路径上至少包含一组<code>.xxx</code>结构的链接，大概率就是文件了，反正应该不至于出现太奇怪的东西。</p><ul><li>代码块语言标注</li></ul><p>在WordPress中，我使用<a href="https://github.com/EnlighterJS/EnlighterJS">EnlighterJS</a>进行代码块高亮，而Hexo默认使用<a href="https://highlightjs.org/">highlight.js</a>进行代码块高亮，虽然highlight.js自带<code>auto_detect</code>功能可以自动识别代码块的语言，但当代码比较短或缺乏对应语言的特点时，自动识别的效果就不太好。而手动为所有文章的代码块标注语言又太过繁琐，因此我研究了一下，发现feedparser支持一个解析参数：<code>sanitize_html=False</code>，可以禁止它对HTML文本进行净化，从而保留一些我需要的东西，例如代码块的语言。</p><ul><li>保留一些Markdown语法中没有的元素</li></ul><p>部分文章含有音频标签<code>&lt;audio&gt;</code>，很多文章都含有删除线<code>&lt;s&gt;</code>或<code>&lt;del&gt;</code>，然而markdownify的默认规则会直接忽略它们，可以通过自定义解析规则来保留。</p><ul><li>站内文件需要屏蔽pjax，不然会出问题</li></ul><p>通过手动给这类链接增加一个<code>target=&quot;_blank&quot;</code>来实现：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">file_exts <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'.pdf'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span>    <span class="token string">'.wav'</span><span class="token punctuation">,</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'.mp3'</span><span class="token punctuation">,</span> <span class="token string">'.webm'</span><span class="token punctuation">,</span> <span class="token string">'.ogv'</span><span class="token punctuation">,</span>    <span class="token string">'.zip'</span><span class="token punctuation">,</span> <span class="token string">'.rar'</span><span class="token punctuation">,</span> <span class="token string">'.gz'</span><span class="token punctuation">,</span> <span class="token string">'.7z'</span><span class="token punctuation">,</span> <span class="token string">'.tar'</span><span class="token punctuation">,</span> <span class="token string">'.xz'</span><span class="token punctuation">,</span>    <span class="token string">'.pdf'</span><span class="token punctuation">,</span> <span class="token string">'.bat'</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> href<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>home_url<span class="token punctuation">)</span> <span class="token keyword">and</span> ext<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> file_exts<span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"""&lt;a target="_blank" href="</span><span class="token interpolation"><span class="token punctuation">&#123;</span>href<span class="token punctuation">&#125;</span></span><span class="token string">" rel="external" title="</span><span class="token interpolation"><span class="token punctuation">&#123;</span>title_part<span class="token punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">&lt;/a>"""</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="适配Gitalk"><a href="#适配Gitalk" class="headerlink" title="适配Gitalk"></a>适配Gitalk</h3><p>之前在动态博客里插入Gitalk只需要在几个PHP文件里写上下面内容即可：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> gitalk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gitalk</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">clientID</span><span class="token operator">:</span> <span class="token string">'xxxxxxxxxxxxxxxx'</span><span class="token punctuation">,</span>    <span class="token literal-property property">clientSecret</span><span class="token operator">:</span> <span class="token string">'xxxxxxxxxxxxxxxx'</span><span class="token punctuation">,</span>    <span class="token literal-property property">body</span><span class="token operator">:</span> location<span class="token punctuation">.</span>href<span class="token punctuation">,</span>    <span class="token literal-property property">repo</span><span class="token operator">:</span> <span class="token string">'BlogComments'</span><span class="token punctuation">,</span>    <span class="token literal-property property">owner</span><span class="token operator">:</span> <span class="token string">'windshadow233'</span><span class="token punctuation">,</span>    <span class="token literal-property property">admin</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'windshadow233'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">createIssueManually</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>    <span class="token literal-property property">distractionFreeMode</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gitalk<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'gitalk-container'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而显然，这样的写法在静态博客中是达不到我想要的效果的，因为静态博客在编译时并不会把<code>location.pathname</code>和<code>location.href</code>动态解析为用户访问时的链接。所以需要对主题文件中对Gitalk的导入部分进行修改。</p><p>该文件在butterfly主题下位于<code>themes/butterfly/layout/includes/third-party/comments/gitalk.pug</code>，我将下面这部分进行了一定的修改：</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token coord">@@ -9,7 +9,8 @@</span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        repo: '!&#123;repo&#125;',</span><span class="token prefix unchanged"> </span><span class="token line">        owner: '!&#123;owner&#125;',</span><span class="token prefix unchanged"> </span><span class="token line">        admin: ['!&#123;admin&#125;'],</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">        id: '!&#123;md5(page.path)&#125;',</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">        id: '!&#123;page.path&#125;',</span><span class="token prefix inserted">+</span><span class="token line">        body: '!&#123;page.permalink&#125;',</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        updateCountCallback: commentCount</span><span class="token prefix unchanged"> </span><span class="token line">      &#125;,!&#123;JSON.stringify(option)&#125;))</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样Hexo在编译时就会将这些参数读取出来，然后写死在每个html文件里，从而达到我想要的效果。</p><hr><p>要做的工作大概就这些，其他问题等遇到了再手动修改即可。最后附上我的迁移代码：</p><h2 id="Python脚本"><a href="#Python脚本" class="headerlink" title="Python脚本"></a>Python脚本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> feedparser<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">import</span> tqdm<span class="token keyword">import</span> requests<span class="token keyword">from</span> markdownify <span class="token keyword">import</span> MarkdownConverter<span class="token punctuation">,</span> chomp<span class="token keyword">from</span> retry <span class="token keyword">import</span> retryfile_exts <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'.pdf'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span>    <span class="token string">'.wav'</span><span class="token punctuation">,</span> <span class="token string">'.mp4'</span><span class="token punctuation">,</span> <span class="token string">'.mp3'</span><span class="token punctuation">,</span> <span class="token string">'.webm'</span><span class="token punctuation">,</span> <span class="token string">'.ogv'</span><span class="token punctuation">,</span>    <span class="token string">'.zip'</span><span class="token punctuation">,</span> <span class="token string">'.rar'</span><span class="token punctuation">,</span> <span class="token string">'.gz'</span><span class="token punctuation">,</span> <span class="token string">'.7z'</span><span class="token punctuation">,</span> <span class="token string">'.tar'</span><span class="token punctuation">,</span> <span class="token string">'.xz'</span><span class="token punctuation">,</span>    <span class="token string">'.pdf'</span><span class="token punctuation">,</span> <span class="token string">'.bat'</span><span class="token punctuation">&#125;</span>language_alias <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'generic'</span><span class="token punctuation">:</span> <span class="token string">'plaintext'</span><span class="token punctuation">,</span>    <span class="token string">'shell'</span><span class="token punctuation">:</span> <span class="token string">'bash'</span><span class="token punctuation">&#125;</span>feed_url <span class="token operator">=</span> <span class="token string">'https://blog.fyz666.xyz/feed/'</span>home_url <span class="token operator">=</span> <span class="token string">'https://blog.fyz666.xyz/'</span><span class="token keyword">class</span> <span class="token class-name">CustomConverter</span><span class="token punctuation">(</span>MarkdownConverter<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Create a custom MarkdownConverter that adds two newlines after an image    """</span>    <span class="token keyword">def</span> <span class="token function">convert_del</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">convert_s</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">convert_audio</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">convert_sup</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">convert_sub</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">convert_a</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        prefix<span class="token punctuation">,</span> suffix<span class="token punctuation">,</span> text <span class="token operator">=</span> chomp<span class="token punctuation">(</span>text<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> text<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">''</span>        href <span class="token operator">=</span> el<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span>        title <span class="token operator">=</span> el<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span>        ext <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        title_part <span class="token operator">=</span> <span class="token string">' "%s"'</span> <span class="token operator">%</span> title<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">r'\"'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> title <span class="token keyword">else</span> <span class="token string">''</span>        <span class="token keyword">if</span> href<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>home_url<span class="token punctuation">)</span> <span class="token keyword">and</span> ext<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> file_exts<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"""&lt;a target="_blank" href="</span><span class="token interpolation"><span class="token punctuation">&#123;</span>href<span class="token punctuation">&#125;</span></span><span class="token string">" rel="external" title="</span><span class="token interpolation"><span class="token punctuation">&#123;</span>title_part<span class="token punctuation">&#125;</span></span><span class="token string">"></span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">&lt;/a>"""</span></span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>prefix<span class="token punctuation">&#125;</span></span><span class="token string">[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">](</span><span class="token interpolation"><span class="token punctuation">&#123;</span>href<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>title_part<span class="token punctuation">&#125;</span></span><span class="token string">)</span><span class="token interpolation"><span class="token punctuation">&#123;</span>suffix<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span> <span class="token keyword">if</span> href <span class="token keyword">else</span> text    <span class="token keyword">def</span> <span class="token function">convert_pre</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> text<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">''</span>        language <span class="token operator">=</span> el<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'data-enlighter-language'</span><span class="token punctuation">)</span>        language <span class="token operator">=</span> language_alias<span class="token punctuation">.</span>get<span class="token punctuation">(</span>language<span class="token punctuation">,</span> language<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"""\n```</span><span class="token interpolation"><span class="token punctuation">&#123;</span>language<span class="token punctuation">&#125;</span></span><span class="token string">\n</span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">\n```\n"""</span></span>    <span class="token keyword">def</span> <span class="token function">convert_div</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> el<span class="token punctuation">,</span> text<span class="token punctuation">,</span> convert_as_inline<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> el<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'class'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'introduce'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"""&lt;div class="introduce"></span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">&lt;/div>"""</span></span>        <span class="token keyword">return</span> text<span class="token keyword">def</span> <span class="token function">md</span><span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> CustomConverter<span class="token punctuation">(</span><span class="token operator">**</span>options<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">WordPress2MD</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> feed_url<span class="token punctuation">,</span> home_url<span class="token punctuation">,</span> out_folder<span class="token operator">=</span><span class="token string">'output'</span><span class="token punctuation">,</span> download_files<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> feed_url        self<span class="token punctuation">.</span>home <span class="token operator">=</span> home_url        self<span class="token punctuation">.</span>out_folder <span class="token operator">=</span> out_folder        self<span class="token punctuation">.</span>download_files <span class="token operator">=</span> download_files    <span class="token decorator annotation punctuation">@retry</span><span class="token punctuation">(</span>tries<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_cover</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> file_name<span class="token punctuation">,</span> id_<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>                    <span class="token keyword">if</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'cover'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        cover <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">': '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> cover        info_url <span class="token operator">=</span> self<span class="token punctuation">.</span>home <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f'wp-json/wp/v2/posts/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>id_<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>info_url<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> r<span class="token punctuation">[</span><span class="token string">'featured_media'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">''</span>        id_ <span class="token operator">=</span> r<span class="token punctuation">[</span><span class="token string">'featured_media'</span><span class="token punctuation">]</span>        media_url <span class="token operator">=</span> self<span class="token punctuation">.</span>home <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f'wp-json/wp/v2/media/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>id_<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>media_url<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> r<span class="token punctuation">[</span><span class="token string">'source_url'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">make_assets_folder</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> asset_folder<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> asset_folder<span class="token punctuation">)</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@retry</span><span class="token punctuation">(</span>tries<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">download_asset_file_and_replace</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> file_url<span class="token punctuation">,</span> assets_folder<span class="token punctuation">,</span> md_content<span class="token punctuation">)</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>file_url<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> assets_folder<span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> md_content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>file_url<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>file_url<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>folder<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        md_content <span class="token operator">=</span> md_content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>file_url<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>        <span class="token keyword">return</span> md_content    <span class="token keyword">def</span> <span class="token function">find_and_replace_asset_files</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> assets_folder<span class="token punctuation">,</span> md_content<span class="token punctuation">)</span><span class="token punctuation">:</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>home<span class="token punctuation">&#125;</span></span><span class="token string">[a-zA-Z\d\/_-]*\.[a-zA-Z\d_%@#-]+(?:\.[a-zA-Z\d_%@#-]+)*'</span></span><span class="token punctuation">)</span>        files <span class="token operator">=</span> pattern<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>md_content<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> tqdm<span class="token punctuation">.</span>tqdm<span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">,</span> desc<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"Downloading files to </span><span class="token interpolation"><span class="token punctuation">&#123;</span>assets_folder<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">continue</span>                md_content <span class="token operator">=</span> self<span class="token punctuation">.</span>download_asset_file_and_replace<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> assets_folder<span class="token punctuation">,</span> md_content<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> assets_folder<span class="token punctuation">,</span> e<span class="token punctuation">)</span>        <span class="token keyword">return</span> md_content    <span class="token keyword">def</span> <span class="token function">html2md</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> html_text<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> md<span class="token punctuation">(</span>html_text<span class="token punctuation">,</span> bullets<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> escape_underscores<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> heading_style<span class="token operator">=</span><span class="token string">'atx'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_entry</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> entry<span class="token punctuation">)</span><span class="token punctuation">:</span>        title <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>        date <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'published_parsed'</span><span class="token punctuation">]</span>        id_ <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'?p='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        base_name <span class="token operator">=</span> title<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>os<span class="token punctuation">.</span>sep<span class="token punctuation">,</span> <span class="token string">"|"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span>        file_name <span class="token operator">=</span> base_name <span class="token operator">+</span> <span class="token string">'.md'</span>        category<span class="token punctuation">,</span> <span class="token operator">*</span>tags <span class="token operator">=</span> <span class="token punctuation">[</span>_<span class="token punctuation">[</span><span class="token string">'term'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> entry<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'tags'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        cover <span class="token operator">=</span> self<span class="token punctuation">.</span>get_cover<span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> id_<span class="token punctuation">)</span>        meta <span class="token operator">=</span> <span class="token string">"---\n"</span> \               <span class="token string-interpolation"><span class="token string">f"title: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>title<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"id: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>id_<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"date: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"categories: [</span><span class="token interpolation"><span class="token punctuation">&#123;</span>category<span class="token punctuation">&#125;</span></span><span class="token string">]\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"tags: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>tags<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"cover: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cover<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"disableNunjucks: true\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"---\n\n"</span></span>        content <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span>        md_content <span class="token operator">=</span> meta <span class="token operator">+</span> self<span class="token punctuation">.</span>html2md<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'\n\n'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>download_files<span class="token punctuation">:</span>            assets_folder <span class="token operator">=</span> base_name            self<span class="token punctuation">.</span>make_assets_folder<span class="token punctuation">(</span>assets_folder<span class="token punctuation">)</span>            md_content <span class="token operator">=</span> self<span class="token punctuation">.</span>find_and_replace_asset_files<span class="token punctuation">(</span>assets_folder<span class="token punctuation">,</span> md_content<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>md_content<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        feed <span class="token operator">=</span> feedparser<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> sanitize_html<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> entry <span class="token keyword">in</span> tqdm<span class="token punctuation">.</span>tqdm<span class="token punctuation">(</span>feed<span class="token punctuation">.</span>entries<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> title <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> title <span class="token operator">==</span> entry<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>parse_entry<span class="token punctuation">(</span>entry<span class="token punctuation">)</span>                    <span class="token keyword">break</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>parse_entry<span class="token punctuation">(</span>entry<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> title <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Article not found!'</span><span class="token punctuation">)</span>wp2md <span class="token operator">=</span> WordPress2MD<span class="token punctuation">(</span>feed_url<span class="token punctuation">,</span> home_url<span class="token punctuation">,</span> <span class="token string">'_posts'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>wp2md<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/python/">Python</category>
      
      <category domain="https://blog.fyz666.xyz/tags/wordpress/">WordPress</category>
      
      <category domain="https://blog.fyz666.xyz/tags/hexo/">Hexo</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/11025/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>将WordPress文章转化为Markdown格式</title>
      <link>https://blog.fyz666.xyz/blog/10094/</link>
      <guid>https://blog.fyz666.xyz/blog/10094/</guid>
      <pubDate>Wed, 03 Apr 2024 05:53:31 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;在某些时候，我有将我的博客文章转化为markdown的需求，我的博客是用WordPress写的，想改静态博客但暂时懒得折腾，于是找了个折中的办法。&lt;/p&gt;
&lt;div class=&quot;note info</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>在某些时候，我有将我的博客文章转化为markdown的需求，我的博客是用WordPress写的，想改静态博客但暂时懒得折腾，于是找了个折中的办法。</p><div class="note info simple"><p>然而刚写完这篇文章没多久就迁Hexo了，正好把本文提到的转换方法用了起来。</p></div><p>GitHub上有不少WordPress转Markdown的脚本，大多是通过解析WordPress导出的xml文件实现转换，但实测效果则非常一般了，因为导出的内容中会含有大量类似这样的东西：<code>&lt;!-- wp:paragraph --&gt;</code>，虽然大部分markdown渲染器会忽略这些内容，但看着还是很乱七八糟，另外如果文中有自定义的block，还会出现下面这种没有解析的内容：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- wp:block-lab&#x2F;download &#123;&quot;url&quot;:&quot;https:&#x2F;&#x2F;xxx.com&quot;,&quot;text&quot;:&quot;xxx&quot;&#125; &#x2F;--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这些脚本还经常处理不好文本换行，导致解析出来的文件里许多本该换行的文字挤在一团。虽然可以手动调整以达到过得去的效果，但十分费时费眼。</p><p>注意到rss订阅链接返回的数据包含了文章内容的纯HTML文本，于是想到可以用HTML来转markdown，将两种规范的标记语言进行互相转换应该问题会小很多。对于这一需求，已经有比较成熟的软件支持了，例如<a href="https://github.com/jgm/pandoc">pandoc</a>，不过这个软件支持转换的文件类型非常多，对我来说好像暂时有点浪费，于是我找了一种比较轻量的方法，即写Python脚本解决，我找到了两个库，一个用来解析rss订阅，一个用来做html转换到markdown的工作：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> feedparserpip <span class="token function">install</span> markdownify<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>脚本如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> feedparser<span class="token keyword">from</span> markdownify <span class="token keyword">import</span> markdownify <span class="token keyword">as</span> md<span class="token keyword">import</span> time<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">RSS2MD</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> out_folder<span class="token operator">=</span><span class="token string">'output'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url        self<span class="token punctuation">.</span>out_folder <span class="token operator">=</span> out_folder    <span class="token keyword">def</span> <span class="token function">parse_entry</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> entry<span class="token punctuation">)</span><span class="token punctuation">:</span>        title <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>        link <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'link'</span><span class="token punctuation">]</span>        date <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'published_parsed'</span><span class="token punctuation">]</span>        tags <span class="token operator">=</span> <span class="token punctuation">[</span>_<span class="token punctuation">[</span><span class="token string">'term'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> entry<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'tags'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        meta <span class="token operator">=</span> <span class="token string">"---\n"</span> \               <span class="token string-interpolation"><span class="token string">f"title: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>title<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"slug: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>link<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"date: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"tags: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>tags<span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span> \               <span class="token string-interpolation"><span class="token string">f"---\n\n"</span></span>        content <span class="token operator">=</span> entry<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'value'</span><span class="token punctuation">]</span>        md_content <span class="token operator">=</span> meta <span class="token operator">+</span> md<span class="token punctuation">(</span>html_text<span class="token punctuation">,</span> bullets<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> escape_underscores<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'\n\n'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        file_name <span class="token operator">=</span> title<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>os<span class="token punctuation">.</span>sep<span class="token punctuation">,</span> <span class="token string">"|"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.md'</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>md_content<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>self<span class="token punctuation">.</span>out_folder<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        feed <span class="token operator">=</span> feedparser<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>        <span class="token keyword">for</span> entry <span class="token keyword">in</span> feed<span class="token punctuation">.</span>entries<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>parse_entry<span class="token punctuation">(</span>entry<span class="token punctuation">)</span>rss2md <span class="token operator">=</span> RSS2MD<span class="token punctuation">(</span><span class="token string">'https://blog.fyz666.xyz/feed/'</span><span class="token punctuation">,</span> <span class="token string">'output'</span><span class="token punctuation">)</span>rss2md<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>markdownify这个库支持非常高自由度的配置，转化的效果也非常OK。</p><p>不过有一个小问题，那就是WordPress的rss订阅会把文中出现的emoji转化为img标签，指向一个域名为s.w.org的链接，似乎是为了兼容各种古早版本的阅读器，然而我并不需要这部分功能，于是可以在WordPress的<code>functions.php</code>文件加入以下代码来禁用此功能：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">remove_action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wp_head'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'print_emoji_detection_script'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">remove_action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin_print_scripts'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'print_emoji_detection_script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">remove_action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wp_print_styles'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'print_emoji_styles'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">remove_action</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'admin_print_styles'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'print_emoji_styles'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">remove_filter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'the_content_feed'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'wp_staticize_emoji'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">remove_filter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'comment_text_rss'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'wp_staticize_emoji'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">remove_filter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'wp_mail'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'wp_staticize_emoji_for_email'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/">博客相关</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/python/">Python</category>
      
      <category domain="https://blog.fyz666.xyz/tags/wordpress/">WordPress</category>
      
      <category domain="https://blog.fyz666.xyz/tags/markdown/">Markdown</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/10094/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>优雅地管理SSL证书及其关联服务</title>
      <link>https://blog.fyz666.xyz/blog/10068/</link>
      <guid>https://blog.fyz666.xyz/blog/10068/</guid>
      <pubDate>Tue, 02 Apr 2024 15:09:38 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;我的服务器上开着一堆服务，其中有一些需要用到SSL证书，例如Nginx及前面刚刚部署的邮件服务。我的SSL证书是通过certbot向Let’s Encrypt申请的，证书有效期为90天，也就是说每隔80多天就得更新一下证书。&lt;/p&gt;
&lt;h2 id=&quot;动机&quot;&gt;&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>我的服务器上开着一堆服务，其中有一些需要用到SSL证书，例如Nginx及前面刚刚部署的邮件服务。我的SSL证书是通过certbot向Let’s Encrypt申请的，证书有效期为90天，也就是说每隔80多天就得更新一下证书。</p><h2 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h2><p>在证书更新后，自然需要将所有用到证书的服务reload一下，以加载新的证书，通常我会写一条crontab作业来干这件事。之前我只有一台服务器A跑Nginx服务的时候，这样感觉还比较舒服，而现在情况变得更加复杂了：</p><p>这两年我都在维护我们实验室主办的学术会议的官网（规模不大，因此把官网部署在我的服务器上完全没问题），所以需要同时维护两个域名的证书。另外，我现在还同时维护着另一台B服务器——两台服务器上的服务共享着同一个域名证书，所以需要在A服务器上的证书更新时同步到B服务器上，并在B服务器上reload所有用到证书的服务。</p><p>于是原先的方法感觉就不太优雅了。正巧这两天iBug大佬发布了一篇文章，介绍了一种通过systemd来reload一些服务的方法：</p><a class="tag-Link" target="_blank" href="https://ibug.io/blog/2024/03/reload-ssl-cert-with-systemd/">    <div class="tag-link-tips">引用站外地址，不保证站点的可用性和安全性</div>    <div class="tag-link-bottom">        <div class="tag-link-left">            <img src="https://api.iowen.cn/favicon/ibug.io/blog/2024/03/reload-ssl-cert-with-systemd/.png" onerror="this.onerror=null;this.src='/images/default-link.png';" />        </div>        <div class="tag-link-right">            <div class="tag-link-title">Reload SSL certificates with systemd</div>            <div class="tag-link-sitename">iBug</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a><p>看上去非常优雅，于是我学习了一下，也给整了起来。</p><h2 id="服务器A上的操作"><a href="#服务器A上的操作" class="headerlink" title="服务器A上的操作"></a>服务器A上的操作</h2><p>首先我将申请证书的脚本从certbot换成了更轻量的<a href="https://github.com/acmesh-official/acme.sh">acme.sh</a>，安装完成后直接支持通过接入cloudflare以及godaddy的dns api来更新泛域名证书（而certbot则需要分别安装两者的插件，感觉稍显笨重）</p><p>我将A服务器作为更新证书的机器，更新证书后自动同步给B，在A服务器上只有Nginx服务需要reload，因此先创建<code>/etc/systemd/system/ssl-certificate.target</code>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /etc/systemd/system/ssl-certificate.target</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>SSL certificates reload helper<span class="token assign-left variable">PropagatesReloadTo</span><span class="token operator">=</span>nginx.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后创建一个path文件<code>/etc/systemd/system/ssl-certificate.path</code>来监听证书文件的变更事件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /etc/systemd/system/ssl-certificate.path</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>SSL certificate reload helper<span class="token assign-left variable">Wants</span><span class="token operator">=</span>%N.target<span class="token punctuation">[</span>Path<span class="token punctuation">]</span><span class="token assign-left variable">PathChanged</span><span class="token operator">=</span>/path/to/cert1/fullchain.cer<span class="token assign-left variable">PathChanged</span><span class="token operator">=</span>/path/to/cert2/fullchain.cer<span class="token punctuation">[</span>Install<span class="token punctuation">]</span><span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我有两个证书，所以这里加了两条<code>PathChanged</code>字段分别监听证书1和证书2的变更事件。</p><p>最后由于path单元只能激活服务而没办法重载服务，所以需要创建一个“一次性”的（oneshot）service，每次激活时来reload服务：</p><p><code>/etc/systemd/system/ssl-certificate.service</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /etc/systemd/system/ssl-certificate.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>SSL certificate reload helper<span class="token assign-left variable">StartLimitIntervalSec</span><span class="token operator">=</span>5s<span class="token assign-left variable">StartLimitBurst</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">Type</span><span class="token operator">=</span>oneshot<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/bin/sh <span class="token parameter variable">-c</span> <span class="token string">'/bin/systemctl reload %N.target; /usr/local/bin/rsync_cert.sh'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我需要额外执行的工作还有向B服务器同步证书1，因此采用了将两条命令写在一起的方式。同步证书则使用了<code>rsync</code>命令。</p><p><code>/usr/local/bin/rsync_cert.sh</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">rsync</span> <span class="token parameter variable">-avzL</span> <span class="token parameter variable">-e</span> <span class="token string">'ssh -i /path/to/priv_key'</span> /path/to/cert1/ user@serverB:/path/to/cert1/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需要先手动执行一下这个脚本将服务器B的公钥写入到<code>~/.ssh/known_hosts</code>，后面就能自动化了。</p><p>最后启动创建的path单元：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reloadsystemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> ssl-certificate.path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="服务器B上的操作"><a href="#服务器B上的操作" class="headerlink" title="服务器B上的操作"></a>服务器B上的操作</h2><p>在服务器B上，同样可以创建与前面相似的<code>target</code>、<code>path</code>及<code>service</code>单元，这样当新的证书同步过去后，也会触发reload。</p><p>由于我的mailserver是部署在docker里的，好像不太好通过systemd来维护，因此同样采用了这种更愚蠢的办法，只是因为命令比较多，就干脆专门写了一个文件：</p><p><code>/etc/systemd/system/ssl-certificate.service</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /etc/systemd/system/ssl-certificate.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>SSL certificate reload helper<span class="token assign-left variable">StartLimitIntervalSec</span><span class="token operator">=</span>5s<span class="token assign-left variable">StartLimitBurst</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">Type</span><span class="token operator">=</span>oneshot<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/bin/reload-services.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>/usr/local/bin/reload-services.sh</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">set</span> +e/bin/systemctl reload ssl-certificate.target/bin/docker <span class="token builtin class-name">exec</span> mailserver postfix reload/bin/docker <span class="token builtin class-name">exec</span> mailserver dovecot reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如此配置，当SSL证书更新时，两台服务器上的所有相关服务都可以顺利自动重新加载证书了！</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E7%9E%8E%E6%8D%A3%E9%BC%93%E7%BB%8F%E5%8E%86/">瞎捣鼓经历</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/linux/">Linux</category>
      
      <category domain="https://blog.fyz666.xyz/tags/ssl/">SSL</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/10068/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用Nginx反向代理DoH服务</title>
      <link>https://blog.fyz666.xyz/blog/10026/</link>
      <guid>https://blog.fyz666.xyz/blog/10026/</guid>
      <pubDate>Thu, 28 Mar 2024 03:32:32 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;DoH（DNS over</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>DoH（DNS over Https）是一种通过HTTPS来进行DNS解析的协议，它使用HTTPS协议加密DoH客户端和基于DoH的DNS解析程序之间的数据，防止中间人对DNS数据的窃听和操纵，从而提高客户端隐私和安全性。</p><p>国内外都有一些服务商提供公共的DoH服务，不过由于一些众所周知的原因，我会更倾向于使用国外服务商的DoH，随便列举几条比较知名的：</p><ul><li>OpenDNS: <code>https://doh.opendns.com/dns-query</code></li><li>CloudFlare: <code>https://cloudflare-dns.com/dns-query</code></li><li>dns.sb: <code>https://doh.dns.sb/dns-query</code></li><li>Google: <code>https://dns.google/resolve</code></li><li>IBM Quad9: <code>https://dns.quad9.net:5053/dns-query</code></li></ul><p>同样的，由于一些原因，我们访问这些服务会有些困难。考虑到我有一台位于海外的云服务器，因此可以考虑通过Nginx做一个反向代理，来间接访问这些服务。下面是我配置的反向代理：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">upstream</span> google</span><span class="token punctuation">&#123;</span>  <span class="token directive"><span class="token keyword">server</span> 8.8.8.8:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 8.8.4.4:443</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">upstream</span> cloudflare</span><span class="token punctuation">&#123;</span>  <span class="token directive"><span class="token keyword">server</span> 104.16.249.249:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 104.16.248.249:443</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">upstream</span> sbdns</span><span class="token punctuation">&#123;</span>  <span class="token directive"><span class="token keyword">server</span> 185.222.222.222:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 103.121.210.210:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 202.5.221.130:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 202.5.221.131:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 202.5.221.132:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 202.5.221.133:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 202.5.221.134:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 45.125.0.26:443</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 165.22.61.129:443</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">upstream</span> opendns</span><span class="token punctuation">&#123;</span>  <span class="token directive"><span class="token keyword">server</span> 146.112.41.2:443</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">upstream</span> ibm-quad9</span><span class="token punctuation">&#123;</span>  <span class="token directive"><span class="token keyword">server</span> 9.9.9.9:5053</span><span class="token punctuation">;</span>  <span class="token directive"><span class="token keyword">server</span> 149.112.112.112:5053</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">&#123;</span>  ...  <span class="token directive"><span class="token keyword">location</span> /query-google</span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> https://google/resolve</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host dns.google</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> accept application/dns-json</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_pass_request_headers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token directive"><span class="token keyword">location</span> /query-cf</span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> https://cloudflare/dns-query</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host cloudflare-dns.com</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> accept application/dns-json</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_pass_request_headers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token directive"><span class="token keyword">location</span> /query-sb</span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> https://sbdns/dns-query</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host doh.sb</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> accept application/dns-json</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_pass_request_headers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token directive"><span class="token keyword">location</span> /query-ibm</span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> https://ibm-quad9/dns-query</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> Host dns.quad9.net</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> accept application/dns-json</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">proxy_pass_request_headers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token directive"><span class="token keyword">location</span> /</span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">default_type</span> text/html</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">return</span> <span class="token number">418</span> <span class="token string">"I'm a teapot"</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如此，就可以通过这个反向代理来对这些海外公共DoH服务进行访问了，使用的方法也很简单，可以用<a href="https://github.com/cloudflare/cloudflared">cloudflared</a>将其部署在树莓派之类的设备上。</p><p>为了避免通过域名DoH来解析自己导致死循环，可以加一个本地host。</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E7%9E%8E%E6%8D%A3%E9%BC%93%E7%BB%8F%E5%8E%86/">瞎捣鼓经历</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/nginx/">Nginx</category>
      
      <category domain="https://blog.fyz666.xyz/tags/dns/">DNS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/">反向代理</category>
      
      <category domain="https://blog.fyz666.xyz/tags/dns-over-https/">DNS over HTTPS</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/10026/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>自部署邮箱接收不到某些邮件的原因排查</title>
      <link>https://blog.fyz666.xyz/blog/10001/</link>
      <guid>https://blog.fyz666.xyz/blog/10001/</guid>
      <pubDate>Sun, 24 Mar 2024 09:14:31 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;用上自部署邮箱后，我就将一些社交平台的绑定邮箱换成了自己的新邮箱。然而某些平台的验证邮件却始终无法收到——即使在垃圾邮件箱。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看日志后发现以下内容：&lt;/p&gt;
&lt;pre</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>用上自部署邮箱后，我就将一些社交平台的绑定邮箱换成了自己的新邮箱。然而某些平台的验证邮件却始终无法收到——即使在垃圾邮件箱。</p><ul><li>Twitter</li></ul><p>查看日志后发现以下内容：</p><pre class="line-numbers language-raw" data-language="raw"><code class="language-raw">Mar 24 03:13:07 mail postfix&#x2F;smtpd[27111]: connect from spruce-goose-al.twitter.com[199.59.150.81]Mar 24 03:13:07 mail postfix&#x2F;smtpd[27111]: Anonymous TLS connection established from spruce-goose-al.twitter.com[199.59.150.81]: TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256&#x2F;256 bits)Mar 24 03:13:08 mail postfix&#x2F;smtpd[27111]: CD556EB3A9: client&#x3D;spruce-goose-al.twitter.com[199.59.150.81]Mar 24 03:13:09 mail opendkim[695]: CD556EB3A9: spruce-goose-al.twitter.com [199.59.150.81] not internalMar 24 03:13:14 mail postfix&#x2F;cleanup[27120]: CD556EB3A9: milter-reject: END-OF-MESSAGE from spruce-goose-al.twitter.com[199.59.150.81]: 5.7.1 rejected by DMARC policy for x.com; from&#x3D;&lt;n08055319d2-77aa9b8824bc4a3a-me&#x3D;&#x3D;&#x3D;mail.fyz666.xyz@bounce.x.com&gt; to&#x3D;&lt;me@mail.fyz666.xyz&gt; proto&#x3D;ESMTP helo&#x3D;&lt;spruce-goose-al.x.com&gt;Mar 24 03:13:19 mail postfix&#x2F;smtpd[27111]: disconnect from spruce-goose-al.twitter.com[199.59.150.81] ehlo&#x3D;2 starttls&#x3D;1 mail&#x3D;1 rcpt&#x3D;1 data&#x3D;0&#x2F;1 quit&#x3D;1 commands&#x3D;6&#x2F;7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现这封来自twitter的邮件似乎因为DMARC验证失败而被reject了：rejected by DMARC policy for x.com;</p><p><del>看来应该是twitter的锅。</del>考虑到之前DMARC的DNS解析内容是<code>v=DMARC1; p=quarantine;</code> 为了能正常接收到邮件，根据<a href="https://github.com/internetstandards/toolbox-wiki/blob/main/DMARC-how-to.md#overview-of-dmarc-configuration-tags">这个文档</a>的解释，我尝试了一下将这里p的值改成了<code>none</code>。</p><p>过了一段时间等DNS缓存刷新后再次进行尝试，发现可以正常收到邮件了。</p><hr><ul><li>Oray</li></ul><pre class="line-numbers language-raw" data-language="raw"><code class="language-raw">Mar 25 22:44:09 mail policyd-spf[507719]: prepend Received-SPF: None (mailfrom) identity&#x3D;mailfrom; client-ip&#x3D;140.205.208.10; helo&#x3D;out208-10.dm.aliyun.com; envelope-from&#x3D;no-reply@news.oray.cn; receiver&#x3D;&lt;UNKNOWN&gt;Mar 25 22:44:09 mail opendmarc[703]: 44B5BEB3AD: news.oray.cn noneMar 25 22:44:09 mail postfix&#x2F;qmgr[162952]: 44B5BEB3AD: from&#x3D;&lt;no-reply@news.oray.cn&gt;, size&#x3D;3073, nrcpt&#x3D;1 (queue active)Mar 25 22:44:09 mail amavis[162976]: (162976-16) Blocked BAD-HEADER-0 &#123;BouncedInbound,Quarantined&#125;, [140.205.208.10]:45205 [140.205.208.10] &lt;no-reply@news.oray.cn&gt; -&gt; &lt;me@mail.fyz666.xyz&gt;, quarantine: V&#x2F;badh-V4on_mWyAIEY, Queue-ID: 44B5BEB3AD, mail_id: V4on_mWyAIEY, Hits: -, size: 2953, 72 msMar 25 22:44:15 mail postfix&#x2F;smtp[507949]: EB1C6EB3EA: to&#x3D;&lt;no-reply@news.oray.cn&gt;, relay&#x3D;mx100.olivemail.net[119.38.129.76]:25, delay&#x3D;5.3, delays&#x3D;0.01&#x2F;0.01&#x2F;2&#x2F;3.2, dsn&#x3D;5.0.0, status&#x3D;bounced (host mx100.olivemail.net[119.38.129.76] said: 550 User not found: no-reply@news.oray.cn (in reply to RCPT TO command))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>好像是<a href="https://en.wikipedia.org/wiki/Amavis">Amavis</a>把它拦了。Amavis是一个开源的电子邮件内容过滤器，这里的日志提到了BAD-HEADER-0，应该是邮件头部之类的问题。查到<a href="https://github.com/docker-mailserver/docker-mailserver/issues/1498">这个issue</a>，为了解决这个问题，可以直接将这个头部过滤策略去掉。</p><p>新建<code>docker-data/dms/config/amavis.cf</code>文件，写入下面内容：</p><pre class="line-numbers language-none"><code class="language-none">$final_bad_header_destiny &#x3D; D_PASS;$bad_header_quarantine_to &#x3D; undef;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后重启容器即可。</p><p>注意，重启docker-mailserver不能使用<code>docker restart</code>命令，而必须先<code>docker compose down</code>再<code>docker compose up -d</code></p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/debug/">Debug</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/email/">Email</category>
      
      <category domain="https://blog.fyz666.xyz/tags/docker-mailserver/">Docker-mailserver</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/10001/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>自建docker-mailserver邮件服务器</title>
      <link>https://blog.fyz666.xyz/blog/9930/</link>
      <guid>https://blog.fyz666.xyz/blog/9930/</guid>
      <pubDate>Wed, 20 Mar 2024 17:06:36 GMT</pubDate>
      
      <description>用docker部署了个邮件服务器～</description>
      
      
      
      <content:encoded><![CDATA[<p>大约两年前我就想过整一个自己域名的邮件服务，这样就可以随意注册邮箱账号了，<del>而且看上去很帅</del>。然而这件事却一拖再拖，到今天总算是整上了，于是就在这里记录一下整的过程。</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/69767e44-ab15-4b61-a5f5-a6567361e09b.png" alt=""><br>我所使用的服务器是腾讯云的轻量应用服务器，地域在新加坡，配置是最low的2核2G入门型，由于配置比较低还跑了一些其他的服务，我只能放弃一些诸如mailcow这样的选项，最后选择的是比较轻量的<a href="https://github.com/docker-mailserver/docker-mailserver/">docker-mailserver</a>，不开启反病毒功能的前提下内存占用比较少。</p><h2 id="一些约定"><a href="#一些约定" class="headerlink" title="一些约定"></a>一些约定</h2><p>为了方便描述，本文中出现的下面内容均为示例，需要替换为实际值。</p><ul><li>一级域名：example.com</li><li>邮件服务器域名：mail.example.com</li><li>主机IP地址：1.2.3.4</li><li>邮件用户名：admin</li><li>邮件用户密码：password</li></ul><p>涉及到的所有DNS解析，均只写主机名，而省略一级域名example.com。</p><h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><p>邮件服务器需要用到的端口非常多，首先需要确保没有其他进程占用这些端口，并将它们打开：</p><ul><li>25：SMTP（显式TLS端口，不可用于身份认证）</li><li>143：IMAP4（显式TLS端口）</li><li>465：ESMTP（隐式TLS端口）</li><li>587：ESMTP（显式TLS端口）</li><li>993：IMAP4 (隐式TLS端口)</li><li>110：POP3</li><li>995：POP3（TLS端口）</li></ul><p>其中25端口被一些国内主机商默认封锁，需要手动申请解封。我的服务器好像没有封，于是直接就用起来了。</p><p>对于这些乱七八糟的端口的理解可以参考<a href="https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/#overview-of-email-ports">这个链接</a>。</p><h2 id="解析DNS"><a href="#解析DNS" class="headerlink" title="解析DNS"></a>解析DNS</h2><p>在开始之前，需要做几条基本的DNS解析。</p><ul><li>A记录：<code>mail -&gt; 1.2.3.4</code></li><li>MX记录：<code>mail -&gt; mail.example.com</code></li></ul><h2 id="正式开始安装"><a href="#正式开始安装" class="headerlink" title="正式开始安装"></a>正式开始安装</h2><h3 id="下载、修改配置文件"><a href="#下载、修改配置文件" class="headerlink" title="下载、修改配置文件"></a>下载、修改配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> mailserver <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> mailserver<span class="token assign-left variable">DMS_GITHUB_URL</span><span class="token operator">=</span><span class="token string">'https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master'</span><span class="token function">wget</span> <span class="token string">"<span class="token variable">$&#123;DMS_GITHUB_URL&#125;</span>/compose.yaml"</span><span class="token function">wget</span> <span class="token string">"<span class="token variable">$&#123;DMS_GITHUB_URL&#125;</span>/mailserver.env"</span><span class="token function">wget</span> <span class="token string">"<span class="token variable">$&#123;DMS_GITHUB_URL&#125;</span>/setup.sh"</span><span class="token function">chmod</span> +x setup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>修改compose.yaml：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mailserver</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> ghcr.io/docker<span class="token punctuation">-</span>mailserver/docker<span class="token punctuation">-</span>mailserver<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mailserver    <span class="token comment"># Provide the FQDN of your mail server here (Your DNS MX record should point to this value)</span>    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> mail.example.com    <span class="token key atrule">env_file</span><span class="token punctuation">:</span> mailserver.env    <span class="token comment"># More information about the mail-server ports:</span>    <span class="token comment"># https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/</span>    <span class="token comment"># To avoid conflicts with yaml base-60 float, DO NOT remove the quotation marks.</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"25:25"</span>    <span class="token comment"># SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)</span>      <span class="token punctuation">-</span> <span class="token string">"143:143"</span>  <span class="token comment"># IMAP4 (explicit TLS => STARTTLS)</span>      <span class="token punctuation">-</span> <span class="token string">"465:465"</span>  <span class="token comment"># ESMTP (implicit TLS)</span>      <span class="token punctuation">-</span> <span class="token string">"587:587"</span>  <span class="token comment"># ESMTP (explicit TLS => STARTTLS)</span>      <span class="token punctuation">-</span> <span class="token string">"993:993"</span>  <span class="token comment"># IMAP4 (implicit TLS)</span>      <span class="token punctuation">-</span> <span class="token string">"110:110"</span>  <span class="token comment"># POP3</span>      <span class="token punctuation">-</span> <span class="token string">"995:995"</span>  <span class="token comment"># POP3 (with TLS)</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/.certificates/<span class="token punctuation">:</span>/etc/letsencrypt/  <span class="token comment"># 挂载证书</span>      <span class="token punctuation">-</span> ./docker<span class="token punctuation">-</span>data/dms/mail<span class="token punctuation">-</span>data/<span class="token punctuation">:</span>/var/mail/      <span class="token punctuation">-</span> ./docker<span class="token punctuation">-</span>data/dms/mail<span class="token punctuation">-</span>state/<span class="token punctuation">:</span>/var/mail<span class="token punctuation">-</span>state/      <span class="token punctuation">-</span> ./docker<span class="token punctuation">-</span>data/dms/mail<span class="token punctuation">-</span>logs/<span class="token punctuation">:</span>/var/log/mail/      <span class="token punctuation">-</span> ./docker<span class="token punctuation">-</span>data/dms/config/<span class="token punctuation">:</span>/tmp/docker<span class="token punctuation">-</span>mailserver/      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime<span class="token punctuation">:</span>ro    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">stop_grace_period</span><span class="token punctuation">:</span> 1m    <span class="token comment"># Uncomment if using `ENABLE_FAIL2BAN=1`:</span>    <span class="token key atrule">cap_add</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> NET_ADMIN    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token string">"ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"</span>      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 3s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我将主机上已经有的域名证书直接挂载到了容器内，以便容器内的邮件服务对其进行读取，如果还没有证书，则也可以在后面设置用Let’s Encrypt获取。</p><p>另外添加了POP3的两个端口映射。</p><hr><p>修改mailserver.env：</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">...<span class="token key attr-name">ENABLE_POP3</span><span class="token punctuation">=</span><span class="token value attr-value">1  # 开启POP3协议</span>...<span class="token key attr-name">SSL_TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">manual  # 指定SSL证书类型，manual表示手动指定路径，这里可以改成letsencrypt（自动获取）</span><span class="token comment"># 如果是manual，则手动填写下面的路径</span><span class="token key attr-name">SSL_CERT_PATH</span><span class="token punctuation">=</span><span class="token value attr-value">/path/to/fullchain.pem</span><span class="token key attr-name">SSL_KEY_PATH</span><span class="token punctuation">=</span><span class="token value attr-value">/path/to/privkey.pem</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置邮件账户"><a href="#设置邮件账户" class="headerlink" title="设置邮件账户"></a>设置邮件账户</h3><p>这个邮件服务在启动之前得预先设置一个邮件账户。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./setup.sh email <span class="token function">add</span> admin@mail.example.com password./setup.sh <span class="token builtin class-name">alias</span> <span class="token function">add</span> postmaster@mail.example.com admin@mail.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建了一个admin用户（不一定得是admin），然后添加了一条alias将postmaster用户指向它。</p><h3 id="添加额外的DNS解析"><a href="#添加额外的DNS解析" class="headerlink" title="添加额外的DNS解析"></a>添加额外的DNS解析</h3><p>接下来需要添几条与邮件安全相关的DNS。</p><ul><li>SPF记录</li></ul><blockquote><p><strong>发件人策略框架</strong>（英语：<strong>Sender Policy Framework</strong>；简称<strong>SPF</strong>； RFC 4408）是一套电子邮件认证机制，可以确认电子邮件确实是由网域授权的邮件服务器寄出，防止有人伪冒身份网络钓鱼或寄出垃圾电邮。SPF允许管理员设定一个DNS TXT记录或SPF记录设定发送邮件服务器的IP范围，如有任何邮件并非从上述指明授权的IP地址寄出，则很可能该邮件并非确实由真正的寄件者寄出（邮件上声称的“寄件者”为假冒）。</p><p><a href="https://zh.wikipedia.org/wiki/%E5%8F%91%E4%BB%B6%E4%BA%BA%E7%AD%96%E7%95%A5%E6%A1%86%E6%9E%B6">维基百科：SPF</a></p></blockquote><p><code>TXT mail -&gt; &quot;v=spf1 a mx ip4:1.2.3.4 ~all&quot;</code></p><p>SPF语法详见<a href="http://www.open-spf.org/SPF_Record_Syntax/">此链接</a>。</p><ul><li>DMARC记录</li></ul><blockquote><p><strong>基于域的消息认证，报告和一致性</strong>（英语：<strong>Domain-based Message Authentication, Reporting and Conformance</strong>，简称<strong>DMARC</strong>）是一套以SPF及DKIM为基础的电子邮件认证机制，可以检测及防止伪冒身份、对付网络钓鱼或垃圾电邮。</p><p><a href="https://zh.wikipedia.org/wiki/%E5%9F%BA%E4%BA%8E%E5%9F%9F%E7%9A%84%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%EF%BC%8C%E6%8A%A5%E5%91%8A%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7">维基百科：DMARC</a></p></blockquote><p><code>TXT _dmarc.mail -&gt; &quot;v=DMARC1; p=quarantine; sp=none; fo=0; adkim=r; aspf=r; pct=100; rf=afrf; ri=86400; rua=mailto:postmaster@mail.example.com; ruf=mailto:postmaster@mail.example.com&quot;</code></p><p>DMARC的详细配置见<a href="https://github.com/internetstandards/toolbox-wiki/blob/main/DMARC-how-to.md#overview-of-dmarc-configuration-tags">此链接</a>。</p><ul><li>DKIM记录</li></ul><blockquote><p><strong>域名密钥识别邮件</strong>（英语：<strong>DomainKeys Identified Mail</strong>，简称<strong>DKIM</strong>）是一套电子邮件认证机制，使用公开密钥加密的基础提供了数字签名与身份验证的功能，以检测寄件者、主旨、内文、附件等部分有否被伪冒或窜改。</p><p><a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E5%AF%86%E9%92%A5%E8%AF%86%E5%88%AB%E9%82%AE%E4%BB%B6">维基百科：DKIM</a></p></blockquote><p>这个相当于将公钥通过DNS解析的方式分发到客户端，发件服务器用私钥签名，从而收件方可验证来源。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./setup.sh config dkim<span class="token function">cat</span> docker-data/dms/config/opendkim/keys/mail.example.com/mail.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>将<code>cat</code>得到的<code>( &quot;</code>与<code>&quot; )</code>之间的内容（记为X）解析到DNS：</p><p><code>TXT mail._domainkey.mail -&gt; X</code></p><hr><p>如果可以的话，再设置一条PTR记录（DNS反向解析记录），用以降低被识别为垃圾邮件的概率。（然而腾讯云轻量应用服务器不给解析，就此作罢。）</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/ac2d7463-ddaa-4fe2-b0d1-56be0cca4b98.png" alt=""></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>在启动服务之前，由于一个<a href="https://github.com/docker-mailserver/docker-mailserver/issues/2545">也许是feature的bug</a>，我们需要给容器打一个<a href="https://github.com/docker-mailserver/docker-mailserver/issues/2545#issuecomment-1097590082">patch</a>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#! /bin/bash</span><span class="token comment">##</span><span class="token comment">## to match what should be escaped whitespaces are escapted with \s and the other character with \character</span><span class="token comment">## the final string does not need to be escaped</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/mydestination\s=\s\$myhostname,\slocalhost\.\$mydomain,\slocalhost/mydestination=localhost.$mydomain,localhost/g'</span> /etc/postfix/main.cf<span class="token builtin class-name">echo</span> <span class="token string">"user-patches.sh successfully executed with custom main.cf hotfix"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将上述脚本放置在<code>docker-data/dms/config/user-patches.sh</code>，然后：</p><pre class="line-numbers language-none"><code class="language-none">docker compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以前往<a href="https://www.checktls.com/TestReceiver">这个网站</a>测试一下tls是否可用。</p><p>实测该服务占用内存在100M左右，可以说是非常轻量了：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/a457a7d1-eba8-4342-9619-8c60fddb9501.png" alt=""></p><h2 id="部署起来了，然而怎么使用？"><a href="#部署起来了，然而怎么使用？" class="headerlink" title="部署起来了，然而怎么使用？"></a>部署起来了，然而怎么使用？</h2><p>这个邮件服务器并没有自带的web服务，因此我们需要使用第三方客户端来登录账号，进行邮件收发。</p><p>使用Python脚本通过587端口发邮件：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> smtplib<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText<span class="token keyword">from</span> email<span class="token punctuation">.</span>utils <span class="token keyword">import</span> formatdatemail_host <span class="token operator">=</span> <span class="token string">'mail.example.com'</span>mail_user <span class="token operator">=</span> <span class="token string">'admin@mail.example.com'</span>mail_pass <span class="token operator">=</span> <span class="token string">'password'</span>sender <span class="token operator">=</span> <span class="token string">'FBI'</span>receivers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'admin@mail.114514.com'</span><span class="token punctuation">]</span>content <span class="token operator">=</span> <span class="token triple-quoted-string string">"""Open the door!!!"""</span>message <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">'plain'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>message<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Your email has been hacked!'</span>message<span class="token punctuation">[</span><span class="token string">'From'</span><span class="token punctuation">]</span> <span class="token operator">=</span> sendermessage<span class="token punctuation">[</span><span class="token string">'To'</span><span class="token punctuation">]</span> <span class="token operator">=</span> receivers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>message<span class="token punctuation">[</span><span class="token string">'Date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> formatdate<span class="token punctuation">(</span><span class="token punctuation">)</span>server <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span>mail_host<span class="token punctuation">,</span> <span class="token number">587</span><span class="token punctuation">)</span>  <span class="token comment"># 连接587端口</span>server<span class="token punctuation">.</span>ehlo<span class="token punctuation">(</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span>starttls<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 开启tls</span>server<span class="token punctuation">.</span>login<span class="token punctuation">(</span>mail_user<span class="token punctuation">,</span> mail_pass<span class="token punctuation">)</span>server<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>sender<span class="token punctuation">,</span> receivers<span class="token punctuation">,</span> message<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>server<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>iOS邮箱app：</p><p><img src="https://blogfiles.oss.fyz666.xyz/jpg/7ce9f770-0415-46b7-902a-de03e68d297c.jpg" alt=""><br>后续设置中，将发件服务器端口设置为587或者465，勾选SSL。</p><hr><p>最后，可以在<a href="https://www.appmaildev.com/cn/dkim">这个网站</a>对上面设置的DKIM、SPF等进行测试：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/8c80f344-5e79-40bc-a2f9-57acf512553e.png" alt=""><br>以及<a href="https://www.mail-tester.com/">这个网站</a>，可以进一步测试邮件的得分：</p><p><img src="https://blogfiles.oss.fyz666.xyz/png/9e610950-8c23-4fff-89ac-1c1f40f02bf1.png" alt=""></p><p><img src="https://blogfiles.oss.fyz666.xyz/png/26d51119-c1e4-48d9-ad9a-e96c1f40f1a2.png" alt=""><br>很遗憾，我的<code>.xyz</code>域名被识别为了<code>SUSPICIOUS_NTLD</code>，再加上用不上rDNS，估计会被以很高的置信度丢进垃圾箱了 🙁 以后再改进！</p>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/%E7%9E%8E%E6%8D%A3%E9%BC%93%E7%BB%8F%E5%8E%86/">瞎捣鼓经历</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/docker/">Docker</category>
      
      <category domain="https://blog.fyz666.xyz/tags/email/">Email</category>
      
      <category domain="https://blog.fyz666.xyz/tags/docker-mailserver/">Docker-mailserver</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/9930/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Gitalk发起Oauth时无法完成跨域请求的问题</title>
      <link>https://blog.fyz666.xyz/blog/9864/</link>
      <guid>https://blog.fyz666.xyz/blog/9864/</guid>
      <pubDate>Tue, 19 Mar 2024 09:14:25 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;我的博客接入Gitalk之后，经常会遇到Gitalk登录失败的问题，表现为Gitalk组件长时间转圈加载不出来，一段时间后渲染出Network Error等字样。&lt;/p&gt;
&lt;p&gt;经过研究，发现是因为Gitalk在发起跨域请求时，其默认的代理出了问题，详情可见&lt;a</description>
          
        
      
      
      
      <content:encoded><![CDATA[<p>我的博客接入Gitalk之后，经常会遇到Gitalk登录失败的问题，表现为Gitalk组件长时间转圈加载不出来，一段时间后渲染出Network Error等字样。</p><p>经过研究，发现是因为Gitalk在发起跨域请求时，其默认的代理出了问题，详情可见<a href="https://github.com/gitalk/gitalk/issues/514">此issue</a>。</p><pre class="line-numbers language-raw" data-language="raw"><code class="language-raw">https:&#x2F;&#x2F;cors-anywhere.azm.workers.dev&#x2F;https:&#x2F;&#x2F;github.com&#x2F;login&#x2F;oauth&#x2F;access_token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面这个跨域代理的域名已经被墙了，在没有科学上网环境或网络环境差的时候就会寄。</p><p>于是我们可以自己整一个代理，方案有几种，如果没有云服务器，可以找一些免费的托管平台来搞一个代理，例如Vercel，可参考<a href="https://prohibitorum.top/7cc2c97a15b4.html">这篇文章</a></p><p>不过实际体验了一下，我发现vercel的域名好像也被墙了（DNS污染）。。。</p><p>考虑到我的网站是用Nginx部署在自己的云服务器上的，并且我的云服务器在境外，可以直连GitHub，因此我采用了另一种更加方便的方案，即用Nginx来转发跨域请求（参考自<a href="https://blog.weiyigeek.top/2022/8-17-682.html">这篇文章</a>）。</p><p>在网站的Nginx配置下加一条<code>location</code>字段：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> /github</span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$request_method</span> = <span class="token string">'OPTIONS'</span>)</span> <span class="token punctuation">&#123;</span>      <span class="token directive"><span class="token keyword">return</span> <span class="token number">204</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> https://github.com/</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后<code>nginx -s reload</code>重新加载配置。</p><p>最后只要配置一下Gitalk组件，加一个<code>proxy</code>参数：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> gitalk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gitalk</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">clientID</span><span class="token operator">:</span> <span class="token string">'xxxxxxxxxxxxxxxx'</span><span class="token punctuation">,</span>    <span class="token literal-property property">clientSecret</span><span class="token operator">:</span> <span class="token string">'xxxxxxxxxxxxxxxx'</span><span class="token punctuation">,</span>    <span class="token literal-property property">body</span><span class="token operator">:</span> location<span class="token punctuation">.</span>href<span class="token punctuation">,</span>    <span class="token literal-property property">repo</span><span class="token operator">:</span> <span class="token string">'BlogComments'</span><span class="token punctuation">,</span>    <span class="token literal-property property">owner</span><span class="token operator">:</span> <span class="token string">'windshadow233'</span><span class="token punctuation">,</span>    <span class="token literal-property property">admin</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'windshadow233'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">createIssueManually</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>    <span class="token literal-property property">distractionFreeMode</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token string">'/github/login/oauth/access_token'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content:encoded>
      
      
      <category domain="https://blog.fyz666.xyz/categories/debug/">Debug</category>
      
      
      <category domain="https://blog.fyz666.xyz/tags/nginx/">Nginx</category>
      
      <category domain="https://blog.fyz666.xyz/tags/cors/">CORS</category>
      
      <category domain="https://blog.fyz666.xyz/tags/oauth/">Oauth</category>
      
      <category domain="https://blog.fyz666.xyz/tags/gitalk/">Gitalk</category>
      
      
      <comments>https://blog.fyz666.xyz/blog/9864/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
